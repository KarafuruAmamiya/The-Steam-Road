tur_set_fractured_porte_variables = {
	#Rumelist Variables
	set_variable = { name = rumelist_progress value = 10 } #Master progress variable. This is incremented by the other variables, and corresponds to the progress bar if the Rumelists are in the lead.
	set_variable = { name = rumelist_progress_from_characters value = 0 } #Progress-from-character component. This updates with the combined popularities of every Rumelists character later on, and is used to calculate rumelist_progress_next.
	set_variable = { name = rumelist_progress_from_igs value = 0 } #Progress-from-IG component. This updates with the combined clout of every Rumelist IG later on, and is used to calculate rumelist_progress_next.
	set_variable = { name = rumelist_progress_from_factories value = 0 } #Progress-from-light/heavy industry building component. This updates with the sum of industry building levels in Ottomans later on, and is used to calculate rumelist_progress_next.
	set_variable = { name = rumelist_progress_from_legitimacy value = 0 } #Progress-from-legitimacy component. This updates with the current government legitimacy, and is also used to calculate rumelist_progress_next.
	set_variable = { name = rumelist_progress_from_effects value = 0 } #Final element in bonapartist_progress_next. This is defined by various effects, and is based solely on scripted effects. This is how designers can manually grant ticking bonuses or maluses to this mechanic.
	set_variable = { name = rumelist_progress_next value = 0 } #This variable is an incrementor - it is calculated by the previous five variables on a weekly basis, and is added to rumelist_progress on the monthly. This is used in localisation to tell the player what the current rate of change for bonapartist_progress is.
	
	#Caliphatist Variables
	if = {
		limit = {
			game_date < 1836.2.1 #Why? Because ruler scope doesn't exist the first time this script is executed.
		}
		set_variable = { name = caliphatist_progress value = 25 } #This is done because the Caliphatists have an advantage the first time the script is executed, but do not necessarily have that advantage if the JE is activated elsewhere.
	}
	else = {
		set_variable = { name = caliphatist_progress value = 10 }
	}
	set_variable = { name = caliphatist_progress_from_characters value = 0 } 
	set_variable = { name = caliphatist_progress_from_igs value = 0 }
	set_variable = { name = caliphatist_progress_from_farms value = 0 } #These variables use the same scheme as the Rumelist ones, with the exception that Legitimists derive from the sum of agricultural building levels in Ottomans.
	set_variable = { name = caliphatist_progress_from_legitimacy value = 0 }
	set_variable = { name = caliphatist_progress_from_effects value = 0 }
	set_variable = { name = caliphatist_progress_next value = 0 }

	#Metropolitan Variables
	set_variable = { name = metropolitan_progress value = 10 }
	set_variable = { name = metropolitan_progress_from_characters value = 0 }
	set_variable = { name = metropolitan_progress_from_igs value = 0 }
	set_variable = { name = metropolitan_progress_from_urban value = 0 } #These variables use the same scheme as the Rumelist ones, with the exception that Legitimists derive from the sum of urban building levels in Ottomans.
	set_variable = { name = metropolitan_progress_from_legitimacy value = 0 }
	set_variable = { name = metropolitan_progress_from_effects value = 0 }
	set_variable = { name = metropolitan_progress_next value = 0 }

	set_variable = { name = ig_weight value = 0 } #This variable is used solely for mathematical purposes, and is set as equivalent to the clout of a given interest group. It exists so that IGs can be weighted higher or lower depending on whether they're in-government or not.
}

tur_weekly_pulse_rumelist_progress = { #Effects like these are run three times, one for each house. All of them function essentially the same way.
	set_variable = { name = rumelist_progress_from_characters value = 0 } #All of these variables are ephemeral and should never be manually set to anything.
	set_variable = { name = rumelist_progress_from_igs value = 0 }
	set_variable = { name = rumelist_progress_from_factories value = 0 }
	set_variable = { name = rumelist_progress_from_legitimacy value = root.government_legitimacy } #Government legitimacy is a single constant, and so this variable is set immediately rather than needing a calculation.
	set_variable = { name = rumelist_progress_next value = 0 }
	#From Characters
	every_scope_character = {
		limit = {
			has_ideology = ideology:ideology_rumelist
		}
		ROOT = {
			change_variable = { name = rumelist_progress_from_characters add = prev.popularity } #for_each loop. For each character of ideology_rumelist, add that character's popularity to bonapartist_progress_from_characters.
		}
	}
	change_variable = { name = rumelist_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
	# From Interest Groups
	every_interest_group = {
		limit = {
			leader = {
				has_ideology = ideology:ideology_rumelist
			}
		}
		ROOT = {														#for_each loop. For each interest group of ideology_bonapartist, perform the following steps in sequence.
			set_variable = { name = ig_weight value = prev.ig_clout } 	#1. Set ig_weight as equal to the interest group's clout.
		}
		if = {
			limit = {
				is_in_government = yes
			}
			ROOT = {
				change_variable = { name = ig_weight multiply = 3 }		#2. If that IG is in government, multiply ig_weight by a given value.
			}
		}
		ROOT = {
			change_variable = { name = rumelist_progress_from_igs add = var:ig_weight }	#3. Add ig_weight to the central rumelist_progress_from_igs variable. This will run until there are no more Rumelist IGs.
		}
	}
	# From Buildings
	every_scope_building = {
		limit = {
			is_building_group = bg_manufacturing
			weekly_profit > 0
		}
		ROOT = {
			change_variable = { name = rumelist_progress_from_factories add = prev.level }
		}
	}
	change_variable = { name = rumelist_progress_from_factories divide = 100 }
	# From Legitimacy
	change_variable = { name = rumelist_progress_from_legitimacy divide = 100 } #Legitimacy divided by 100, to make it minimum 0 and maximum 1.
	change_variable = { name = rumelist_progress_from_legitimacy subtract = 0.5 } #Legitimacy subtracted by 0.5, to make it minimum -0.5 and maximum 0.5. Balanced scale of negative to absolute value.
	if = {
		limit = {
			NOT = {
				ruler_is_rumelist = yes #If the ruler is Rumelist, then the Rumelists benefit from high legitimacy and suffer from low legitimacy.
			}
		}
		change_variable = { name = rumelist_progress_from_legitimacy multiply = -0.5 } #If the ruler is not Rumelist, they benefit from low legitimacy and suffer from high legitimacy.
	}

	#Final Compilation
	change_variable = { name = rumelist_progress_next add = var:rumelist_progress_from_characters } #All sub-variables are added to bonapartist_progress_next here. At this point, all of the component variables are calculated properly, and converted to a decimal scale.
	change_variable = { name = rumelist_progress_next add = var:rumelist_progress_from_igs }
	change_variable = { name = rumelist_progress_next add = var:rumelist_progress_from_factories }
	change_variable = { name = rumelist_progress_next add = var:rumelist_progress_from_legitimacy }
	change_variable = { name = rumelist_progress_next add = var:rumelist_progress_from_effects }
}

tur_weekly_pulse_caliphatist_progress = {
	set_variable = { name = caliphatist_progress_from_characters value = 0 }
	set_variable = { name = caliphatist_progress_from_igs value = 0 }
	set_variable = { name = caliphatist_progress_from_farms value = 0 }
	set_variable = { name = caliphatist_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = caliphatist_progress_next value = 0 }
	#From Characters
	every_scope_character = {
		limit = {
			has_ideology = ideology:ideology_caliphatist
		}
		ROOT = {
			change_variable = { name = caliphatist_progress_from_characters add = prev.popularity }
		}
	}
	change_variable = { name = caliphatist_progress_from_characters divide = 100 }
	# From Interest Groups
	every_interest_group = {
		limit = {
			leader = {
				has_ideology = ideology:ideology_caliphatist
			}
		}
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
		}
		if = {
			limit = {
				is_in_government = yes
			}
			ROOT = {
				change_variable = { name = ig_weight multiply = 3 }
			}
		}
		ROOT = {
			change_variable = { name = caliphatist_progress_from_igs add = var:ig_weight }
		}
	}
	# From Buildings
	every_scope_building = {
		limit = {
			OR = {
				is_building_group = bg_agriculture
				is_building_group = bg_plantations
			}
			NOT = {
				is_building_group = bg_subsistence_agriculture
			}
			weekly_profit > 0
		}
		ROOT = {
			change_variable = { name = caliphatist_progress_from_farms add = prev.level }
		}
	}
	change_variable = { name = caliphatist_progress_from_farms divide = 100 }
	# From Legitimacy
	change_variable = { name = caliphatist_progress_from_legitimacy divide = 100 }
	change_variable = { name = caliphatist_progress_from_legitimacy subtract = 0.5 }
	if = {
		limit = {
			NOT = {
				ruler_is_caliphatist = yes
			}
		}
		change_variable = { name = caliphatist_progress_from_legitimacy multiply = -0.5 }
	}

	#Final Compilation
	change_variable = { name = caliphatist_progress_next add = var:caliphatist_progress_from_characters }
	change_variable = { name = caliphatist_progress_next add = var:caliphatist_progress_from_igs }
	change_variable = { name = caliphatist_progress_next add = var:caliphatist_progress_from_farms }
	change_variable = { name = caliphatist_progress_next add = var:caliphatist_progress_from_legitimacy }
	change_variable = { name = caliphatist_progress_next add = var:caliphatist_progress_from_effects }
}

tur_weekly_pulse_metropolitan_progress = {
	set_variable = { name = metropolitan_progress_from_characters value = 0 }
	set_variable = { name = metropolitan_progress_from_igs value = 0 }
	set_variable = { name = metropolitan_progress_from_urban value = 0 }
	set_variable = { name = metropolitan_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = metropolitan_progress_next value = 0 }
	#From Characters
	every_scope_character = {
		limit = {
			has_ideology = ideology:ideology_metropolitan
		}
		ROOT = {
			change_variable = { name = metropolitan_progress_from_characters add = prev.popularity }
		}
	}
	change_variable = { name = metropolitan_progress_from_characters divide = 100 }
	# From Interest Groups
	every_interest_group = {
		limit = {
			leader = {
				has_ideology = ideology:ideology_metropolitan
			}
		}
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
		}
		if = {
			limit = {
				is_in_government = yes
			}
			ROOT = {
				change_variable = { name = ig_weight multiply = 3 }
			}
		}
		ROOT = {
			change_variable = { name = metropolitan_progress_from_igs add = var:ig_weight }
		}
	}
	# From Buildings
	every_scope_building = {
		limit = {
			OR {
				is_building_group = bg_service
				is_building_group = bg_urban_facilities
			}
		}
		ROOT = {
			change_variable = { name = metropolitan_progress_from_urban add = prev.level }
		}
	}
	change_variable = { name = metropolitan_progress_from_urban divide = 150 } #to compensate for higher levels on average
	# From Legitimacy
	change_variable = { name = metropolitan_progress_from_legitimacy divide = 100 }
	change_variable = { name = metropolitan_progress_from_legitimacy subtract = 0.5 }
	if = {
		limit = {
			NOT = {
				ruler_is_metropolitan = yes
			}
		}
		change_variable = { name = metropolitan_progress_from_legitimacy multiply = -0.5 }
	}

	#Final Compilation
	change_variable = { name = metropolitan_progress_next add = var:metropolitan_progress_from_characters }
	change_variable = { name = metropolitan_progress_next add = var:metropolitan_progress_from_igs }
	change_variable = { name = metropolitan_progress_next add = var:metropolitan_progress_from_urban }
	change_variable = { name = metropolitan_progress_next add = var:metropolitan_progress_from_legitimacy }
	change_variable = { name = metropolitan_progress_next add = var:metropolitan_progress_from_effects }
}

tur_clear_fractured_porte_variables = { #Clears all variables, to save memory/performance. Should be executed by anything that makes Divided Monarchists irrelevant.
	remove_variable = rumelist_progress 
	remove_variable = rumelist_progress_from_characters 
	remove_variable = rumelist_progress_from_igs 
	remove_variable = rumelist_progress_from_factories
	remove_variable = rumelist_progress_from_legitimacy 
	remove_variable = rumelist_progress_from_effects 
	remove_variable = rumelist_progress_next 
	remove_variable = caliphatist_progress 
	remove_variable = caliphatist_progress_from_characters 
	remove_variable = caliphatist_progress_from_igs 
	remove_variable = caliphatist_progress_from_farms
	remove_variable = caliphatist_progress_from_legitimacy 
	remove_variable = caliphatist_progress_from_effects 
	remove_variable = caliphatist_progress_next 
	remove_variable = metropolitan_progress 
	remove_variable = metropolitan_progress_from_characters 
	remove_variable = metropolitan_progress_from_igs 
	remove_variable = metropolitan_progress_from_farms 
	remove_variable = metropolitan_progress_from_legitimacy 
	remove_variable = metropolitan_progress_from_effects 
	remove_variable = metropolitan_progress_next 
	remove_variable = ig_weight 
}

tur_freeze_fractured_porte_progress = {
	set_variable = tur_fractured_porte_freeze
	set_variable = { name = rumelist_progress_next value = 0 }
	set_variable = { name = caliphatist_progress_next value = 0 }
	set_variable = { name = metropolitan_progress_next value = 0 }
}

tur_define_dominant_faction = { #This scripted effect determines which dynasty is the most powerful one, and sets tur_dominant_faction_progress to be equal to that faction's progress variable. This allows the bar to work, and much easier calculation to take place.
	if = {
		limit = {
			var:rumelist_progress > var:caliphatist_progress
			var:rumelist_progress > var:metropolitan_progress
		}
		set_variable = { name = tur_dominant_faction_progress value = var:rumelist_progress }
	}
	else_if = {
		limit = {
			var:caliphatist_progress > var:rumelist_progress
			var:caliphatist_progress > var:metropolitan_progress
		}
		set_variable = { name = tur_dominant_faction_progress value = var:caliphatist_progress }
	}
	else_if = {
		limit = {
			var:metropolitan_progress > var:rumelist_progress
			var:metropolitan_progress > var:caliphatist_progress
		}
		set_variable = { name = tur_dominant_faction_progress value = var:metropolitan_progress }
	}
	clamp_variable = { name = tur_dominant_faction_progress max = 360 min = 0 }  #These variables cannot exceed 360 or 0, to prevent bad and ugly displays.
}

generate_ottoman_monarch = {
	hidden_effect = {
		if = {
			limit = {
				any_scope_character = {
					is_heir = yes
				}
			}
			random_scope_character = {
				limit = {
					is_heir = yes
				}
				kill_character = yes
			}
		}
	}
	if = {
		limit = {
			has_variable = rumelist_coup
		}
		create_character = {
			template = dynamic_rumelist_ruler_template
		}
	}
	else_if = {
		limit = {
			has_variable = caliphatist_coup
		}
		create_character = {
			template = dynamic_caliphatist_ruler_template
		}
	}
	else_if = {
		limit = {
			has_variable = metropolitan_coup
		}
		create_character = {
			template = dynamic_metropolitan_ruler_template
		}
	}
	random_scope_character = {
		limit = {
			is_ruler = yes
		}
		save_scope_as = new_sultan_scope
	}
}