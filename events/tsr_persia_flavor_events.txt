namespace = persian_flavor
namespace = persian_renaissance
namespace = persian_eclipse
#namespace = karakum_frontier

#Persian Flavor
persian_flavor.1 = { #The Rights of Zoroastrians
	type = country_event
	title = persian_flavor.1.t
	desc = persian_flavor.1.d
	flavor =  persian_flavor.1.f
	duration = 3
	event_image = {
		video = "asia_hinduism_sikhism"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_religion.dds"
	
	trigger = {
		#triggered by decision
	}
	option = { #Give them only the slightest basic rights
		name = persian_flavor.1.a
		default_option = yes
		every_scope_state = {
			limit = {
				has_modifier = zoroastrian_persecution
			}
			remove_modifier = zoroastrian_persecution
		}
		
		ai_chance = {
			base = 25
		}
	}
	option = { #Religious minorities deserve equal status to other citizens of the Empire
		name = persian_flavor.1.b
		trigger = {
			NOT = { has_law = law_type:law_state_atheism }
		}
		every_scope_state = {
			limit = {
				has_modifier = zoroastrian_persecution
			}
			remove_modifier = zoroastrian_persecution
		}
		if = {
			every_scope_state = {
				limit = {
					is_incorporated = yes
					any_scope_pop = {
						religion = rel:zoroastrian
					}
				}
				add_modifier = {
					name = council_of_zoroastrians
					months = -1
				}
			}
		}
		add_radicals = {
			religion = rel:shiite
			value = medium_radicals
		}
		ig:ig_devout = {
			add_modifier = {
				name = tolerated_heathens
				months = long_modifier_time
				is_decaying = yes
			}
		}
		hidden_effect = {
			if = {
				limit = {
					NOT = { has_variable = zandism_tolerated_heathens }
				}
				set_variable = zandism_tolerated_heathens
			}
		}
		
		ai_chance = {
			base = 25
		}
	}
}

persian_flavor.2 = { #Fire Temple vandalized!
	type = country_event
	placement = scope:yazd_scope
	title = persian_flavor.2.t
	desc = persian_flavor.2.d
	flavor =  persian_flavor.2.f
	duration = 3
	event_image = {
		video = "unspecific_vandalized_storefront"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_fire.dds"
	
	trigger = {
	}
	
	immediate = {
		random_scope_state = {
			limit = {
				state_region = s:STATE_YAZD
			}
			save_scope_as = yazd_scope
		}
	}
	
	option = { #Tolerate the violence
		name = persian_flavor.2.a
		default_option = yes
		scope:yazd_scope = {
			add_radicals_in_state = {
				value = large_radicals
				religion = rel:zoroastrian
			}
			add_modifier = {
				name = anti_zoroastrian_tolerated
				months = long_modifier_time
				is_decaying = yes
			}
		}
	}
	option = { #Punish the perpetrators
		name = persian_flavor.2.b
		scope:yazd_scope = {
			add_radicals_in_state = {
				value = large_radicals
				religion = rel:shiite
			}
		}
		hidden_effect = {
			if = {
				limit = {
					NOT = { has_variable = zandism_religious_conflicts }
				}
				set_variable = zandism_religious_conflicts
			}
		}
	}
}

# Mohammad Hussain Zand
persian_flavor.3 = {
	type = country_event
	placement = scope:arabestan_state
	title = persian_flavor.3.t
	desc = persian_flavor.3.d
	flavor = persian_flavor.3.f

	duration = 3

	event_image = {
		video = "europenorthamerica_political_extremism"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	minor_left_icon = scope:mohammad_zand_scope

	icon = "gfx/interface/icons/event_icons/event_revolt.dds"

	trigger = {
		ig:ig_devout = {
			is_marginal = no
			ig_approval <= 0	
		}
		game_date >= 1865.1.1
		game_date < 1900.1.1
		NOT = { has_global_variable = mohammad_zand_var }
		any_scope_state = {
			state_region = s:STATE_KHUZESTAN
		}
	}

	immediate = {
		set_global_variable = mohammad_zand_var
		create_character = {
			template = per_mohammad_zand_character_template
			on_created = {
				set_variable = mohammad_zand
			}
		}
		random_scope_character = {
			limit = {
				has_variable = mohammad_zand
			}
			save_scope_as = mohammad_zand_scope
		}
		random_scope_state = {
			limit = {
				state_region = s:STATE_KHUZESTAN
			}
			save_scope_as = arabestan_state
		}
	}

	option = {
		name = persian_flavor.3.a #Suppress him
		default_option = yes
		show_as_tooltip = {
			create_character = {
				template = per_mohammad_zand_character_template
			}
		}
		scope:arabestan_state = {
			convert_population = {
				target = rel:zandism
				value = 0.05
			}
			add_radicals_in_state = {
				religion = rel:zandism
				value = 1
			}
		}
		
		ai_chance = {
			base = 25
		}
	}
	option = {
		name = persian_flavor.3.b #Support his rhetorics
		show_as_tooltip = {
			create_character = {
				template = per_mohammad_zand_character_template
			}
		}
		scope:mohammad_zand_scope = {
			set_as_interest_group_leader = yes
		}
		
		scope:arabestan_state = {
			convert_population = {
				target = rel:zandism
				value = 0.1
			}
		}
		
		ai_chance = {
			base = 0
		}
	}
}

persian_flavor.4 = { #The Iranian Identity
	type = country_event
	title = persian_flavor.4.t
	desc = persian_flavor.4.d
	flavor =  persian_flavor.4.f
	duration = 3
	event_image = {
		video = "asia_hinduism_sikhism"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	trigger = {
		has_technology_researched = pan-nationalism
		has_variable = persian_renaissance_romantic_nationalism
		NOT = { has_variable = iranian_identity }
		NOR = {
			has_law = law_type:law_state_religion
			has_law = law_type:law_ethnostate
			has_law = law_type:law_national_supremacy
		}
	}
	
	immediate = {
		set_variable = iranian_identity
	}
	
	option = { #All Iranians are citizens of the empire
		name = persian_flavor.4.a
		custom_tooltip = {
			text = united_iran_tt
			set_variable = united_iran
		}
		add_primary_culture = cu:luri
		add_primary_culture = cu:kurdish
		add_primary_culture = cu:caspian
		add_primary_culture = cu:pashtun
		add_primary_culture = cu:tajik
		add_primary_culture = cu:baluchi
		
		every_interest_group = {
			limit = {
				OR = {
					leader = {
						law_stance = {
							law = law_type:law_national_supremacy
							value > neutral
						}
						law_stance = {
							law = law_type:law_ethnostate
							value > neutral
						}
					}
					law_stance = {
						law = law_type:law_national_supremacy
						value > neutral
					}
					law_stance = {
						law = law_type:law_ethnostate
						value > neutral
					}
				}
			}
			add_modifier = {
				name = rejected_iranian_identity
				months = normal_modifier_time
				is_decaying = yes
			}
		}
		
		hidden_effect = {
			if = {
				limit = { NOT = { has_variable = zandism_minorities } }
				set_variable = zandism_minorities
			}
		}
		
		ai_chance = {
			base = 25
		}
	}
	
	option = { #The empire should be ruled by Persians
		name = persian_flavor.4.b
		default_option = yes
		remove_primary_culture = cu:azerbaijani
		add_radicals = {
			culture = cu:azerbaijani
			value = large_radicals
		}
		add_radicals = {
			culture = cu:luri
			value = large_radicals
		}
		add_radicals = {
			culture = cu:kurdish
			value = large_radicals
		}
		add_radicals = {
			culture = cu:caspian
			value = large_radicals
		}
		add_radicals = {
			culture = cu:pashtun
			value = large_radicals
		}
		add_radicals = {
			culture = cu:tajik
			value = large_radicals
		}
		add_radicals = {
			culture = cu:baluchi
			value = large_radicals
		}
		
		add_modifier = {
			name = russification_modifier
			months = long_modifier_time
		}
		
		every_interest_group = {
			limit = {
				OR = {
					leader = {
						law_stance = {
							law = law_type:law_national_supremacy
							value > neutral
						}
						law_stance = {
							law = law_type:law_ethnostate
							value > neutral
						}
					}
					law_stance = {
						law = law_type:law_national_supremacy
						value > neutral
					}
					law_stance = {
						law = law_type:law_ethnostate
						value > neutral
					}
				}
			}
			add_modifier = {
				name = persian_ruled_empire
				months = normal_modifier_time
			}
		}
		
		ai_chance = {
			base = 75
		}
	}
}

# Mirza Aqa Khan Kermani
persian_flavor.5 = {
	type = country_event
	placement = root
	title = persian_flavor.5.t
	desc = persian_flavor.5.d
	flavor = persian_flavor.5.f

	duration = 3

	event_image = {
		video = "middleeast_engineer_blueprint"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	minor_left_icon = scope:kermani_scope

	icon = "gfx/interface/icons/event_icons/event_academia.dds"

	trigger = {
		c:PER ?= this
		ig:ig_intelligentsia = {
			is_marginal = no
			ig_approval <= 0	
		}
		game_date >= 1854.1.1
		game_date < 1900.1.1
		NOT = { has_global_variable = kermani_var }
		any_scope_state = {
			state_region = s:STATE_KERMAN
		}
		any_country = {
			NOT = { root = this }
			OR = {
				country_is_in_europe = yes
				gunpowder_empire_trigger = yes
			}
			OR = {
				has_interest_marker_in_region = region_arabic
				has_interest_marker_in_region = region_anatolia
				has_interest_marker_in_region = region_persia
			}
		}
	}

	immediate = {
		set_global_variable = kermani_var
		create_character = {
			template = per_kermani_character_template
			on_created = {
				set_variable = kermani
			}
		}
		random_scope_character = {
			limit = {
				has_variable = kermani
			}
			save_scope_as = kermani_scope
		}
		random_scope_state = {
			limit = {
				state_region = s:STATE_KERMAN
			}
			save_scope_as = kerman_state
		}
		random_scope_state = {
			limit = {
				state_region = s:STATE_ISFAHAN
			}
			save_scope_as = isfahan_state
		}
		if = {
			limit = {
				NOT = { has_technology_researched = nationalism }
			}
			add_technology_progress = { progress = 2500 technology = nationalism }
		}
		if = {
			limit = {
				NOT = { has_technology_researched = egalitarianism }
			}
			add_technology_progress = { progress = 2500 technology = egalitarianism }
		}
	}

	option = {
		name = persian_flavor.5.a
		default_option = yes
		ai_chance = {
			base = 0
			modifier = {
				trigger = {
					NOR = {
						has_strategy = ai_strategy_progressive_agenda
						has_strategy = ai_strategy_egalitarian_agenda
						has_strategy = ai_strategy_nationalist_agenda
					}
				}
				add = 100
			}
		}
		scope:kermani_scope = {
			interest_group = {
				add_modifier = {
					name = modifier_kermani_in_exile
					months = normal_modifier_time
					is_decaying = yes
				}
			}
			exile_character_with_martyrdom = yes
		}
		
		hidden_effect = {
			random_country = {
				limit = {
					NOT = { root = this }
					OR = {
						country_is_in_europe = yes
						gunpowder_empire_trigger = yes
					}
					OR = {
						has_interest_marker_in_region = region_arabic
						has_interest_marker_in_region = region_anatolia
						has_interest_marker_in_region = region_persia
					}
				}
				trigger_event = { id = persian_flavor.6 days = 3 }
			}
		}
	}
	option = {
		name = persian_flavor.5.b
		ai_chance = {
			base = 0
			modifier = {
				trigger = {
					OR = {
						has_strategy = ai_strategy_progressive_agenda
						has_strategy = ai_strategy_egalitarian_agenda
						has_strategy = ai_strategy_nationalist_agenda
					}
				}
				add = 100
			}
		}
		show_as_tooltip = {
			create_character = {
				template = per_kermani_character_template
			}
		}
		capital = {
			add_radicals_in_state = {
				value = small_radicals
				pop_type = academics
			}
		}
	}
}

# Mirza Aqa Khan Kermani (Exile)
persian_flavor.6 = {
	type = country_event
	placement = root
	title = persian_flavor.6.t
	desc = persian_flavor.6.d
	flavor = persian_flavor.6.f

	duration = 3

	event_image = {
		video = "middleeast_engineer_blueprint"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	minor_left_icon = scope:kermani_scope

	icon = "gfx/interface/icons/event_icons/event_academia.dds"

	immediate = {
		c:PER = {
			save_scope_as = per_scope
		}
		random_character_in_exile_pool = {
			limit = {
				has_variable = kermani
			}
			transfer_character = root
			save_scope_as = kermani_scope
		}
		if = {
			limit = {
				NOT = { has_technology_researched = nationalism }
			}
			add_technology_progress = { progress = 2500 technology = nationalism }
		}
		if = {
			limit = {
				NOT = { has_technology_researched = egalitarianism }
			}
			add_technology_progress = { progress = 2500 technology = egalitarianism }
		}
	}
	
	option = {
		name = persian_flavor.6.a
		default_option = yes
		show_as_tooltip = {
			create_character = {
				template = per_kermani_character_template
			}
		}
	}
}

# Rise of Constitutionalism Movements
persian_flavor.7 = {
	type = country_event
	placement = root
	title = persian_flavor.7.t
	desc = persian_flavor.7.d
	flavor = persian_flavor.7.f

	duration = 3

	event_image = {
		video = "votp_agitator_speaking"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"
	
	trigger = {
		c:PER ?= this
		OR = {
			has_law = law_type:law_autocracy
			has_law = law_type:law_oligarchy
			has_law = law_type:law_landed_voting
			has_law = law_type:law_state_religion
			has_law = law_type:law_denominational_exclusion
			has_law = law_type:law_legacy_slavery
			has_law = law_type:law_debt_slavery
			has_law = law_type:law_slave_trade
			has_law = law_type:law_serfdom
			has_law = law_type:law_tenant_farmers
		}
		has_technology_researched = nationalism
		any_scope_character = {
			OR = {
				is_ruler = yes
				has_role = agitator
				interest_group = {
					is_marginal = no
				}
			}
			has_ideology = ideology:ideology_persian_constitutionalist
		}
		NOT = { has_variable = constitutionalism_var }
	}

	immediate = {
		set_variable = constitutionalism_var
	}
	
	option = {
		name = persian_flavor.7.a
		default_option = yes
		add_journal_entry = { type = je_constitutional_reformation }
		ig:ig_intelligentsia = {
			set_ig_bolstering = yes
		}
		
		hidden_effect = {
			if = {
				limit = { NOT = { has_variable = zandism_constitutionalism } }
				set_variable = zandism_constitutionalism
			}
		}
		
		ai_chance = {
			base = 0
			modifier = {
				trigger = {
					OR = {
						has_strategy = ai_strategy_progressive_agenda
						has_strategy = ai_strategy_egalitarian_agenda
						has_strategy = ai_strategy_nationalist_agenda
					}
				}
				add = 100
			}
		}
	}
	
	option = {
		name = persian_flavor.7.b
		set_variable = rejected_constitutionalism
		add_radicals = {
			interest_group = ig:ig_intelligentsia
			value = medium_radicals
		}
		ig:ig_intelligentsia = {
			leader = {
				set_ideology = ideology:ideology_radical
			}
			add_modifier = {
				name = refused_reforms
				months = long_modifier_time
				is_decaying = yes
			}
			set_ig_suppression = yes
		}
		
		ai_chance = {
			base = 0
			modifier = {
				trigger = {
					NOR = {
						has_strategy = ai_strategy_progressive_agenda
						has_strategy = ai_strategy_egalitarian_agenda
						has_strategy = ai_strategy_nationalist_agenda
					}
				}
				add = 100
			}
		}
	}
}

# Kermani's Critiques
persian_flavor.8 = {
	type = country_event
	placement = root
	title = persian_flavor.8.t
	desc = persian_flavor.8.d
	flavor = persian_flavor.8.f

	duration = 3

	event_image = {
		video = "votp_prison"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_academia.dds"
	
	minor_left_icon = scope:kermani_scope
	
	trigger = {
		c:PER ?= root
		OR = {
			any_country = {
				NOT = { c:PER ?= this }
				any_scope_character = {
					has_variable = kermani
				}
			}
			any_character_in_exile_pool = {
				has_variable = kermani
			}
		}
		any_scope_character = {
			has_variable = prime_minister_trigger
		}
		has_variable = rejected_constitutionalism
		NOT = { has_variable = kermani_critique }
	}

	immediate = {
		c:PER = {
			save_scope_as = per_scope
		}
		set_variable = kermani_critique
		random_character = {
			limit = { has_variable = kermani }
			save_scope_as = kermani_scope
		}
		random_scope_character = {
			limit = {
				has_variable = prime_minister_trigger
			}
			save_scope_as = prime_minister_scope
			interest_group = {
				save_scope_as = prime_minister_ig_scope
			}
		}
	}
	
	option = {
		name = persian_flavor.8.a
		trigger = {
			any_country = {
				NOT = { c:PER ?= this }
				any_scope_character = {
					has_variable = kermani
				}
			}
		}
		default_option = yes
		random_country = {
			limit = {
				NOT = { c:PER ?= this }
				any_scope_character = {
					has_variable = kermani
				}
			}
			trigger_event = { id = persian_flavor.9 days = 3 }
		}
	}
	
	option = {
		name = persian_flavor.8.b
		trigger = {
			any_character_in_exile_pool = {
				has_variable = kermani
			}
		}
		
		random_character_in_exile_pool = {
			limit = { has_variable = kermani }
			transfer_character = root
		}
		
		trigger_event = { id = persian_flavor.10 days = 7 }
	}
	
	option = {
		name = persian_flavor.8.c
		scope:prime_minister_ig_scope = {
			add_modifier = {
				name = kermani_scot_free
				months = normal_modifier_time
				is_decaying = yes
			}
		}
	}
}

# Persia Demands Kermani's Return
persian_flavor.9 = {
	type = country_event
	placement = root
	title = persian_flavor.9.t
	desc = persian_flavor.9.d
	flavor = persian_flavor.9.f

	duration = 3

	event_image = {
		video = "votp_prison"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	minor_left_icon = scope:kermani_scope

	icon = "gfx/interface/icons/event_icons/waving_flag.dds"

	immediate = {
		root = {
			save_scope_as = shelter_scope
		}
		c:PER = {
			save_scope_as = per_scope
		}
		random_scope_character = {
			limit = {
				has_variable = kermani
			}
			save_scope_as = kermani_scope
		}
	}
	
	option = {
		name = persian_flavor.9.a
		default_option = yes
		scope:kermani_scope = {
			transfer_character = c:PER
		}
		
		hidden_effect = {
			every_country = {
				limit = {
					OR = {
						has_interest_marker_in_region = region_arabic
						has_interest_marker_in_region = region_anatolia
						has_interest_marker_in_region = region_persia
					}
				}
				post_notification = returned_kermani
			}
			c:PER = {
				trigger_event = { id = persian_flavor.10 days = 7 }
			}
		}
		
		ai_chance = {
			base = 0
			modifier = {
				trigger = {
					NOR = {
						has_strategy = ai_strategy_progressive_agenda
						has_strategy = ai_strategy_egalitarian_agenda
						has_strategy = ai_strategy_nationalist_agenda
					}
				}
				add = 100
			}
		}
	}
	
	option = {
		name = persian_flavor.9.b
		change_relations = {
			country = c:PER
			value = -20
		}
		
		hidden_effect = {
			every_country = {
				limit = {
					OR = {
						has_interest_marker_in_region = region_arabic
						has_interest_marker_in_region = region_anatolia
						has_interest_marker_in_region = region_persia
					}
				}
				post_notification = did_not_return_kermani
			}
		}
		
		ai_chance = {
			base = 0
			modifier = {
				trigger = {
					OR = {
						has_strategy = ai_strategy_progressive_agenda
						has_strategy = ai_strategy_egalitarian_agenda
						has_strategy = ai_strategy_nationalist_agenda
					}
				}
				add = 100
			}
		}
	}
}

# Kermani's Execution
persian_flavor.10 = {
	type = country_event
	placement = root
	title = persian_flavor.10.t
	desc = persian_flavor.10.d
	flavor = persian_flavor.10.f

	duration = 3

	event_image = {
		video = "votp_hostile_court"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	minor_left_icon = scope:kermani_scope

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	immediate = {
		random_scope_character = {
			limit = {
				has_variable = kermani
			}
			save_scope_as = kermani_scope
		}
	}
	
	option = {
		name = persian_flavor.10.a
		default_option = yes
		scope:kermani_scope = {
			kill_character = yes
		}
		
		add_radicals = {
			interest_group = ig:ig_intelligentsia
			value = large_radicals
		}
		
		ig:ig_intelligentsia = {
			add_modifier = {
				name = executed_kermani
				months = normal_modifier_time
				is_decaying = yes
			}
		}
	}
}

# Constitutional Reformation Succeeds (Creation of the Majlis)
persian_flavor.11 = {
	type = country_event
	placement = root
	title = persian_flavor.11.t
	desc = persian_flavor.11.d
	flavor = persian_flavor.11.f

	duration = 3

	event_image = {
		video = "votp_agitator_speaking"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	
	option = {
		name = persian_flavor.11.a
		default_option = yes
		add_modifier = {
			name = constitutional_reformation
			months = normal_modifier_time
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = reformed_constitution
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = persian_flavor.11.b
		trigger = {
			has_law = law_type:law_shared_roots
		}
		add_modifier = {
			name = constitutional_reformation_religion
			months = normal_modifier_time
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = reformed_constitution
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = persian_flavor.11.c
		trigger = {
			has_law = law_type:law_census_voting
		}
		add_modifier = {
			name = constitutional_reformation_suffrage
			months = normal_modifier_time
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = reformed_constitution
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = persian_flavor.11.d
		trigger = {
			has_law = law_type:law_homesteading
		}
		add_modifier = {
			name = constitutional_reformation_land_reform
			months = normal_modifier_time
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = reformed_constitution
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = persian_flavor.11.e
		trigger = {
			has_law = law_type:law_public_schools
		}
		add_modifier = {
			name = constitutional_reformation_education
			months = normal_modifier_time
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = reformed_constitution
				months = normal_modifier_time
			}
		}
	}
}

# Bazaar Merchants Complains About Western Goods
persian_flavor.12 = {
	type = country_event
	placement = root
	title = persian_flavor.12.t
	desc = persian_flavor.12.d
	flavor = persian_flavor.12.f

	duration = 3

	event_image = {
		video = "asia_farmers_market"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"
	
	cooldown = { months = normal_modifier_time }
	
	trigger = {
		c:PER ?= this
		has_technology_researched = stock_exchange
		NOT = { has_law = law_type:law_protectionism }
		NOT = { has_variable = protect_bazaars }
		any_market = {
			owner = root
			any_trade_route = {
				OR = {
					goods = g:clothes
					goods = g:luxury_clothes
					goods = g:furniture
					goods = g:luxury_furniture
					goods = g:silk
					goods = g:fabric
					goods = g:fish
					goods = g:groceries
					goods = g:dye
					goods = g:glass
					goods = g:porcelain
					goods = g:tools
					goods = g:meat
					goods = g:fruit
					goods = g:liquor
					goods = g:wine
					goods = g:tea
					goods = g:coffee
					goods = g:sugar
					goods = g:tobacco
					goods = g:fine_art
				}
				exporter.owner = {
					country_is_in_europe = yes
					gunpowder_empire_trigger = no
				}
				is_trade_route_productive = yes
			}
		}
	}
	
	immediate = {
		ig:ig_petty_bourgeoisie = {
			save_scope_as = bazaari_ig
		}
		ig:ig_industrialists = {
			save_scope_as = industrialists_ig
		}
		random_market = {
			limit = {
				owner = root
				any_trade_route = {
					OR = {
						goods = g:clothes
						goods = g:luxury_clothes
						goods = g:furniture
						goods = g:luxury_furniture
						goods = g:silk
						goods = g:fabric
						goods = g:fish
						goods = g:groceries
						goods = g:dye
						goods = g:glass
						goods = g:porcelain
						goods = g:tools
						goods = g:meat
						goods = g:fruit
						goods = g:liquor
						goods = g:wine
						goods = g:tea
						goods = g:coffee
						goods = g:sugar
						goods = g:tobacco
						goods = g:fine_art
					}
					exporter.owner = {
						country_is_in_europe = yes
						gunpowder_empire_trigger = no
					}
					is_trade_route_productive = yes
				}
			}
			random_trade_route = {
				limit = {
					OR = {
						goods = g:clothes
						goods = g:luxury_clothes
						goods = g:furniture
						goods = g:luxury_furniture
						goods = g:silk
						goods = g:fabric
						goods = g:fish
						goods = g:groceries
						goods = g:dye
						goods = g:glass
						goods = g:porcelain
						goods = g:tools
						goods = g:meat
						goods = g:fruit
						goods = g:liquor
						goods = g:wine
						goods = g:tea
						goods = g:coffee
						goods = g:sugar
						goods = g:tobacco
						goods = g:fine_art
					}
					exporter.owner = {
						country_is_in_europe = yes
						gunpowder_empire_trigger = no
					}
					is_trade_route_productive = yes
				}
				exporter.owner = {
					limit = {
						country_is_in_europe = yes
						gunpowder_empire_trigger = no
					}
					save_scope_as = exporter_country
				}
			}
		}
	}
	
	option = { # They should deal with it!
		name = persian_flavor.12.a
		default_option = yes
		
		scope:bazaari_ig = {
			add_modifier = {
				name = domestic_merchants_scorned
				months = normal_modifier_time
			}
		}
		every_scope_state = {
			limit = {
				ig_state_pol_strength_share = {
					target = scope:bazaari_ig
					value > 0.1
				}
			}
			add_modifier = {
				name = modifier_protectionism_support
				months = long_modifier_time
			}
		}
	}
	option = { # If they can complain, they can improve their products!
		name = persian_flavor.12.b
		scope:bazaari_ig = {
			add_modifier = {
				name = domestic_merchants_scorned_max
				months = normal_modifier_time
			}
		}
		scope:industrialists_ig = {
			add_modifier = {
				name = respected_market_freedom
				months = normal_modifier_time
			}
		}
		every_scope_state = {
			limit = {
				ig_state_pol_strength_share = {
					target = scope:bazaari_ig
					value > 0.1
				}
			}
			add_modifier = {
				name = modifier_protectionism_support
				months = long_modifier_time
			}
		}
	}
	option = { # We need to protect our bazaars
		name = persian_flavor.12.c
		trigger = {
			scope:bazaari_ig = {
				is_in_government = yes
				is_marginal = no
			}
			NOT = { has_journal_entry = je_government_petition }
		}
		set_variable = protect_bazaars
		add_journal_entry = { type = je_government_petition }
		every_scope_state = {
			limit = {
				ig_state_pol_strength_share = {
					target = scope:bazaari_ig
					value > 0.1
				}
			}
			add_modifier = {
				name = modifier_protectionism_support
				months = long_modifier_time
			}
		}
	}
}

# Foreign Military Advisors
persian_flavor.13 = {
	type = country_event
	placement = root
	title = persian_flavor.13.t
	desc = persian_flavor.13.d
	flavor = persian_flavor.13.f

	duration = 3

	event_image = {
		video = "asia_westerners_arriving"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_military.dds"
	
	immediate = {
		save_scope_as = hiring_country
		random_country = {
            limit = {
				NOT = { root = this }
                country_rank = rank_value:great_power 
                relations:root >= relations_threshold:neutral
				trigger_if = {
					limit = {
						year <= 1861
					}
					AND = {
						has_technology_researched = general_staff
						has_technology_researched = percussion_cap
						has_technology_researched = screw_frigate
						has_technology_researched = power_of_the_purse
						OR = {
							has_technology_researched = field_works
							has_technology_researched = logistics
							has_technology_researched = triage
							has_technology_researched = shell_gun
							has_technology_researched = rifling
							has_technology_researched = hydraulic_cranes
						}
					}
				}
				trigger_else_if = {
					limit = {
						year > 1861
						year <= 1886
					}
					calc_true_if = {
						amount >= 5
						has_technology_researched = modern_nursing
						has_technology_researched = enlistment_offices
						has_technology_researched = electric_telegraph
						has_technology_researched = military_statistics
						has_technology_researched = repeaters
						has_technology_researched = breech_loading_artillery
						has_technology_researched = handcranked_machine_gun
						has_technology_researched = self_propelled_torpedoes
						has_technology_researched = monitor_tech
						has_technology_researched = ironclad_tech
						has_technology_researched = jeune_ecole
						has_technology_researched = floating_harbor
						has_technology_researched = gantry_cranes
					}
				}
				trigger_else_if = {
					limit = {
						year > 1886
						year <= 1911
					}
					calc_true_if = {
						amount >= 5
						has_technology_researched = trench_works
						has_technology_researched = war_propaganda
						has_technology_researched = wargaming
						has_technology_researched = defense_in_depth
						has_technology_researched = bolt_action_rifles
						has_technology_researched = automatic_machine_guns
						has_technology_researched = submarine
						has_technology_researched = destroyer
						has_technology_researched = dreadnought
						has_technology_researched = sea_lane_strategies
						has_technology_researched = landing_craft
						has_technology_researched = concrete_dockyards
					}
				}
            }
            save_scope_as = army_country
        }
		#random_country = {
        #    limit = { 
        #        has_war_with = root
		#		is_country_type = recognized
		#		country_rank >= rank_value:major_power 
        #    }
        #    save_scope_as = enemy_country
        #}
	}
	
	option = {
		name = persian_flavor.13.a
		default_option = yes
		#Up to era 4
		if = {
	        limit = { 
				NOT = { has_technology_researched = mandatory_service }
				scope:army_country = {
					has_technology_researched = mandatory_service
				}
			}
			add_technology_progress = { 
				progress = 3000 
				technology = mandatory_service
			}	
		}
		if = {
	        limit = { 
				NOT = { has_technology_researched = artillery }
				scope:army_country = {
					has_technology_researched = artillery
				}
			}
			add_technology_progress = { 
				progress = 3000 
				technology = artillery
			}	
		}
		if = {
	        limit = { 
				NOT = { has_technology_researched = line_infantry }
				scope:army_country = {
					has_technology_researched = line_infantry
				}
				has_technology_researched = mandatory_service
			}
			add_technology_progress = { 
				progress = 3000 
				technology = line_infantry
			}	
		}
		if = {
	        limit = { 
				NOT = { has_technology_researched = napoleonic_warfare }
				scope:army_country = {
					has_technology_researched = napoleonic_warfare
				}
				has_technology_researched = line_infantry
			}
			add_technology_progress = { 
				progress = 3000 
				technology = napoleonic_warfare
			}	
		}
		#if = {
	    #    limit = { 
		#		NOT = { has_technology_researched = army_reserves }
		#		scope:army_country = {
		#			has_technology_researched = army_reserves
		#		}
		#		has_technology_researched = line_infantry
		#	}
		#	add_technology_progress = { 
		#		progress = 3000 
		#		technology = army_reserves
		#	}	
		#}
		if = { 
	        limit = { 
				NOT = { has_technology_researched = general_staff }
				scope:army_country = {
					has_technology_researched = general_staff
				}
				#has_technology_researched = army_reserves (for some reason made this error?)
			}
			add_technology_progress = { 
				progress = 5000 
				technology = general_staff
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = percussion_cap } 
				scope:army_country = {
					has_technology_researched = percussion_cap
				}
			}
            add_technology_progress = { 
				progress = 5000 
				technology = percussion_cap
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = paddle_steamer } 
				scope:army_country = {
					has_technology_researched = paddle_steamer
				}
			}
            add_technology_progress = { 
				progress = 3000 
				technology = paddle_steamer
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = screw_frigate } 
				scope:army_country = {
					has_technology_researched = screw_frigate
				}
				has_technology_researched = paddle_steamer
			}
            add_technology_progress = { 
				progress = 5000 
				technology = screw_frigate
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = power_of_the_purse } 
			}
            add_technology_progress = { 
				progress = 5000 
				technology = power_of_the_purse
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = field_works } 
				scope:army_country = {
					has_technology_researched = field_works
				}
				has_technology_researched = napoleonic_warfare
			}
            add_technology_progress = { 
				progress = 5000 
				technology = field_works
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = logistics } 
				scope:army_country = {
					has_technology_researched = logistics
				}
				has_technology_researched = napoleonic_warfare
				has_technology_researched = army_reserves
			}
            add_technology_progress = { 
				progress = 5000 
				technology = logistics
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = rifling } 
				scope:army_country = {
					has_technology_researched = rifling
				}
				has_technology_researched = percussion_cap
			}
            add_technology_progress = { 
				progress = 5000 
				technology = rifling
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = triage } 
				scope:army_country = {
					has_technology_researched = triage
				}
				has_technology_researched = logistics
			}
            add_technology_progress = { 
				progress = 5000 
				technology = triage
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = shell_gun } 
				scope:army_country = {
					has_technology_researched = shell_gun
				}
			}
            add_technology_progress = { 
				progress = 5000 
				technology = shell_gun
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = hydraulic_cranes } 
				scope:army_country = {
					has_technology_researched = hydraulic_cranes
				}
			}
            add_technology_progress = { 
				progress = 5000 
				technology = hydraulic_cranes
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = modern_nursing } 
				scope:army_country = {
					has_technology_researched = modern_nursing
				}
				has_technology_researched = triage
			}
            add_technology_progress = { 
				progress = 6500 
				technology = modern_nursing
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = enlistment_offices } 
				scope:army_country = {
					has_technology_researched = enlistment_offices
				}
				has_technology_researched = logistics
			}
            add_technology_progress = { 
				progress = 6500 
				technology = enlistment_offices
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = electric_telegraph } 
				scope:army_country = {
					has_technology_researched = electric_telegraph
				}
				has_technology_researched = logistics
			}
            add_technology_progress = { 
				progress = 6500 
				technology = electric_telegraph
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = military_statistics } 
				scope:army_country = {
					has_technology_researched = military_statistics
				}
				has_technology_researched = electric_telegraph
				has_technology_researched = general_staff
			}
            add_technology_progress = { 
				progress = 6500 
				technology = military_statistics
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = repeaters } 
				scope:army_country = {
					has_technology_researched = repeaters
				}
				has_technology_researched = rifling
			}
            add_technology_progress = { 
				progress = 6500 
				technology = repeaters
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = breech_loading_artillery } 
				scope:army_country = {
					has_technology_researched = breech_loading_artillery
				}
				has_technology_researched = rifling
				has_technology_researched = shell_gun
			}
            add_technology_progress = { 
				progress = 6500 
				technology = breech_loading_artillery
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = handcranked_machine_gun } 
				scope:army_country = {
					has_technology_researched = handcranked_machine_gun
				}
				has_technology_researched = repeaters
				has_technology_researched = breech_loading_artillery
			}
            add_technology_progress = { 
				progress = 6500 
				technology = handcranked_machine_gun
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = self_propelled_torpedoes } 
				scope:army_country = {
					has_technology_researched = self_propelled_torpedoes
				}
				has_technology_researched = ironclad_tech
				has_technology_researched = jeune_ecole
			}
            add_technology_progress = { 
				progress = 6500 
				technology = self_propelled_torpedoes
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = monitor_tech } 
				scope:army_country = {
					has_technology_researched = monitor_tech
				}
				has_technology_researched = ironclad_tech
			}
            add_technology_progress = { 
				progress = 6500 
				technology = monitor_tech
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = ironclad_tech } 
				scope:army_country = {
					has_technology_researched = ironclad_tech
				}
				has_technology_researched = screw_frigate
			}
            add_technology_progress = { 
				progress = 6500 
				technology = ironclad_tech
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = jeune_ecole } 
				scope:army_country = {
					has_technology_researched = jeune_ecole
				}
				has_technology_researched = power_of_the_purse
			}
            add_technology_progress = { 
				progress = 6500 
				technology = jeune_ecole
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = floating_harbor } 
				scope:army_country = {
					has_technology_researched = floating_harbor
				}
				has_technology_researched = gantry_cranes
			}
            add_technology_progress = { 
				progress = 6500 
				technology = floating_harbor
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = gantry_cranes } 
				scope:army_country = {
					has_technology_researched = gantry_cranes
				}
				has_technology_researched = hydraulic_cranes
			}
            add_technology_progress = { 
				progress = 6500 
				technology = gantry_cranes
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = trench_works } 
				scope:army_country = {
					has_technology_researched = trench_works
				}
				has_technology_researched = general_staff
				has_technology_researched = electric_telegraph
			}
            add_technology_progress = { 
				progress = 8000 
				technology = trench_works
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = war_propaganda } 
				scope:army_country = {
					has_technology_researched = war_propaganda
				}
				has_technology_researched = enlistment_offices
			}
            add_technology_progress = { 
				progress = 8000 
				technology = war_propaganda
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = wargaming } 
				scope:army_country = {
					has_technology_researched = wargaming
				}
				has_technology_researched = military_statistics
			}
            add_technology_progress = { 
				progress = 8000 
				technology = wargaming
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = defense_in_depth } 
				scope:army_country = {
					has_technology_researched = defense_in_depth
				}
				has_technology_researched = trench_works
			}
            add_technology_progress = { 
				progress = 8000 
				technology = defense_in_depth
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = bolt_action_rifles } 
				scope:army_country = {
					has_technology_researched = bolt_action_rifles
				}
				has_technology_researched = repeaters
			}
            add_technology_progress = { 
				progress = 8000 
				technology = bolt_action_rifles
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = automatic_machine_guns } 
				scope:army_country = {
					has_technology_researched = automatic_machine_guns
				}
				has_technology_researched = handcranked_machine_gun
				has_technology_researched = bolt_action_rifles
			}
            add_technology_progress = { 
				progress = 8000 
				technology = automatic_machine_guns
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = submarine } 
				scope:army_country = {
					has_technology_researched = submarine
				}
				has_technology_researched = self_propelled_torpedoes
			}
            add_technology_progress = { 
				progress = 8000 
				technology = submarine
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = destroyer } 
				scope:army_country = {
					has_technology_researched = destroyer
				}
				has_technology_researched = monitor_tech
				has_technology_researched = ironclad_tech
			}
            add_technology_progress = { 
				progress = 8000 
				technology = destroyer
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = dreadnought } 
				scope:army_country = {
					has_technology_researched = dreadnought
				}
				has_technology_researched = sea_lane_strategies
				has_technology_researched = ironclad_tech
			}
            add_technology_progress = { 
				progress = 8000 
				technology = dreadnought
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = sea_lane_strategies } 
				scope:army_country = {
					has_technology_researched = sea_lane_strategies
				}
				has_technology_researched = jeune_ecole
			}
            add_technology_progress = { 
				progress = 8000 
				technology = sea_lane_strategies
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = landing_craft } 
				scope:army_country = {
					has_technology_researched = landing_craft
				}
				has_technology_researched = jeune_ecole
				has_technology_researched = monitor_tech
			}
            add_technology_progress = { 
				progress = 8000 
				technology = landing_craft
			}	
		}
		if = { 
			limit = { 
				NOT = { has_technology_researched = concrete_dockyards } 
				scope:army_country = {
					has_technology_researched = concrete_dockyards
				}
				has_technology_researched = concrete_dockyards
			}
            add_technology_progress = { 
				progress = 8000 
				technology = concrete_dockyards
			}	
		}
		add_modifier = {
			name = hiring_western_advisors
			months = normal_modifier_time
		}
        change_relations = {
            country = scope:army_country
            value = 20
        }
        add_treasury = -300000
        scope:army_country = { 
			add_treasury = 300000 
			post_notification = hired_military_advisors
		}
	}
	
	option = {
		name = persian_flavor.13.b
	}
}

# 
persian_flavor.14 = {
	type = country_event
	placement = root
	title = persian_flavor.14.t
	desc = persian_flavor.14.d
	flavor = persian_flavor.14.f

	duration = 3

	event_image = {
		video = "middleeast_engineer_blueprint"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_industry.dds"
	
	trigger = {
		
	}
	
	immediate = {
		
	}
	
	option = {
		name = persian_flavor.14.a
		
	}
	option = {
		name = persian_flavor.14.b
		
	}
}

# 
persian_flavor.15 = {
	type = country_event
	placement = root
	title = persian_flavor.15.t
	desc = persian_flavor.15.d
	flavor = persian_flavor.15.f

	duration = 3

	event_image = {
		video = "unspecific_gears_pistons"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_industry.dds"
	
	option = {
		name = persian_flavor.15.a
		default_option = yes
		
	}
	
	option = {
		name = persian_flavor.15.b

	}
}

# Moral Outrage
persian_flavor.16 = {
	type = country_event
	placement = scope:outrage_state
	title = persian_flavor.16.t
	desc = persian_flavor.16.d
	flavor = persian_flavor.16.f

	duration = 3

	event_image = {
		video = "middleeast_police_breaking_door"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"
	
	cooldown = { months = normal_modifier_time }
	
	trigger = {
		has_law = law_type:law_state_religion
		any_scope_state = {
			is_incorporated = yes
			state_region = {
				is_homeland = cu:persian
				NOT = { has_variable = cracked_down_state }
			}
			any_scope_building = {
				is_building_type = building_port
				level >= 3
			}
		}
		any_interest_group = {
			is_in_government = yes
			leader = {
				has_ideology = ideology:ideology_traditionalist
			}
		}
		OR = {
			any_market = {
				owner = root
				any_trade_route = {
					exporter.owner = {
						country_is_in_europe = yes
						gunpowder_empire_trigger = no
					}
				}
			}
			any_country = {
				country_is_in_europe = yes
				gunpowder_empire_trigger = no
				OR = {
					has_diplomatic_pact = {
						who = root
						type = customs_union
					}
					has_diplomatic_pact = {
						who = root
						type = trade_agreement
					}
					has_diplomatic_pact = {
						who = root
						type = defensive_pact
					}
					has_diplomatic_pact = {
						who = root
						type = alliance
					}
				}
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				any_market = {
					owner = root
					any_trade_route = {
						exporter.owner = {
							country_is_in_europe = yes
							gunpowder_empire_trigger = no
						}
					}
				}
			}
			random_market = {
				limit = {
					owner = root
					any_trade_route = {
						exporter.owner = {
							country_is_in_europe = yes
							gunpowder_empire_trigger = no
						}
					}
				}
				random_trade_route = {
					limit = {
						exporter.owner = {
							country_is_in_europe = yes
							gunpowder_empire_trigger = no
						}
					}
					exporter.owner = { save_scope_as = western_country }
				}
			}
		}
		else_if = {
			limit = {
				any_country = {
					country_is_in_europe = yes
					gunpowder_empire_trigger = no
					OR = {
						has_diplomatic_pact = {
							who = root
							type = customs_union
						}
						has_diplomatic_pact = {
							who = root
							type = trade_agreement
						}
						has_diplomatic_pact = {
							who = root
							type = defensive_pact
						}
						has_diplomatic_pact = {
							who = root
							type = alliance
						}
					}
				}
			}
			random_country = {
				limit = {
					country_is_in_europe = yes
					gunpowder_empire_trigger = no
					OR = {
						has_diplomatic_pact = {
							who = root
							type = customs_union
						}
						has_diplomatic_pact = {
							who = root
							type = trade_agreement
						}
						has_diplomatic_pact = {
							who = root
							type = defensive_pact
						}
						has_diplomatic_pact = {
							who = root
							type = alliance
						}
					}
				}
				save_scope_as = western_country
			}
		}
		random_scope_state = {
			limit = {
				is_incorporated = yes
				state_region = {
					is_homeland = cu:persian
					NOT = { has_variable = cracked_down_state }
				}
				any_scope_building = {
					is_building_type = building_port
					level >= 3
				}
			}
			save_scope_as = outrage_state
		}
		random_interest_group = {
			limit = {
				is_in_government = yes
				leader = {
					has_ideology = ideology:ideology_traditionalist
				}
			}
			save_scope_as = outraged_ig
			leader = {
				save_scope_as = outraged_ig_leader
			}
		}
	}
	
	option = {
		name = persian_flavor.16.a #What's wrong with letting youths experiment a little?
		default_option = yes
		scope:outraged_ig = {
			add_modifier = {
				name = corrupted_youths
				months = 12
			}
		}
	}
	option = {
		name = persian_flavor.16.b #The Westerners are corrupting our society!
		change_relations = {
			country = scope:western_country
			value = -20
		}
	}
	option = {
		name = persian_flavor.16.c #We need a morality police!
		trigger = {
			institution_investment_level = {
				institution = institution_police
				value >= 1
			}
			NOR = {
				has_law = law_type:law_right_of_assembly
				has_law = law_type:law_protected_speech
			}
		}
		if = {
			limit = {
				institution_investment_level = {
					institution = institution_police
					value < 4
				}
			}
			change_institution_investment_level = {
				institution = institution_police
				investment = 1
			}
		}
		scope:outrage_state = {
			add_modifier = {
				name = police_crackdown
				months = 12
			}
			state_region = {
				set_variable = { name = cracked_down_state }
			}
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = against_morality_police
				months = normal_modifier_time
			}
		}
	}
}

# Helmand River Conflict
persian_flavor.17 = {
	type = country_event
	placement = scope:conflict_state
	title = persian_flavor.17.t
	desc = persian_flavor.17.d
	flavor = persian_flavor.17.f

	duration = 3

	event_image = {
		video = "asia_dead_cattle_poor_harvest"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_agriculture.dds"
	
	trigger = {
		has_technology_researched = mechanical_tools
		NOT = {
			has_variable = helmand_river_conflict
		}
		any_scope_state = {
			is_incorporated = yes
			any_scope_building = {
				count >= 3
				OR = {
					is_building_group = bg_agriculture
					is_building_group = bg_plantations
				}
				level >= 10
			}
			OR = {
				has_state_trait = state_trait_helmand_river
				any_neighbouring_state = {
					has_state_trait = state_trait_helmand_river
				}
			}
		}
		OR = {
			any_scope_state = {
				has_state_trait = state_trait_helmand_river
				NOT = { is_homeland_of_country_cultures = root }
			}
			any_country = {
				NOR = {
					root = this
					is_country_type = decentralized
				}
				any_scope_state = {
					has_state_trait = state_trait_helmand_river
					is_incorporated = yes
				}
			}
		}
	}
	
	immediate = {
		set_variable = helmand_river_conflict
		random_scope_state = {
			limit = {
				is_incorporated = yes
				any_scope_building = {
					count >= 3
					OR = {
						is_building_group = bg_agriculture
						is_building_group = bg_plantations
					}
					level >= 10
				}
				OR = {
					has_state_trait = state_trait_helmand_river
					any_neighbouring_state = {
						has_state_trait = state_trait_helmand_river
					}
				}
			}
			save_scope_as = conflict_state
		}
	}
	
	option = {
		name = persian_flavor.17.a #Prioritize the water for irrigation
		default_option = yes
		
		every_scope_state = {
			limit = {
				is_incorporated = yes
				any_scope_building = {
					count >= 3
					OR = {
						is_building_group = bg_agriculture
						is_building_group = bg_plantations
					}
					level >= 10
				}
				OR = {
					has_state_trait = state_trait_helmand_river
					any_neighbouring_state = {
						has_state_trait = state_trait_helmand_river
					}
				}
			}
			add_modifier = {
				name = helmand_river_irrigation
				months = -1
			}
		}
		if = {
			limit = {
				any_scope_state = {
					has_state_trait = state_trait_helmand_river
					NOT = { is_homeland_of_country_cultures = root }
					NOT = { scope:conflict_state = this }
				}
			}
			every_scope_state = {
				limit = {
					NOT = { is_homeland_of_country_cultures = root }
					NOT = { scope:conflict_state = this }
					has_state_trait = state_trait_helmand_river
				}
				add_modifier = {
					name = river_water_diverted
					months = -1
				}
				add_radicals_in_state = {
					value = large_radicals
				}
			}
		}
		if = {
			limit = {
				any_country = {
					NOR = {
						root = this
						is_country_type = decentralized
					}
					any_scope_state = {
						has_state_trait = state_trait_helmand_river
						is_incorporated = yes
					}
				}
			}
			every_country = {
				limit = {
					NOR = {
						root = this
						is_country_type = decentralized
					}
					any_scope_state = {
						has_state_trait = state_trait_helmand_river
						is_incorporated = yes
					}
				}
				change_relations = {
					country = root
					value = -30
				}
				hidden_effect = {
					trigger_event = { id = persian_flavor.20 }
				}
			}
		}
	}
	option = {
		name = persian_flavor.17.b #Water rights must remain equal
		ig:ig_rural_folk = {
			add_modifier = {
				name = refused_irrigation_project
				months = 12
			}
		}
		if = {
			limit = {
				OR = {
					has_law = law_type:law_serfdom 
					has_law = law_type:law_tenant_farmers
				}
			}
			ig:ig_landowners = {
				add_modifier = {
					name = refused_irrigation_project
					months = 12
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_commercialized_agriculture 
			}
			ig:ig_industrialists = {
				add_modifier = {
					name = refused_irrigation_project
					months = 12
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_collectivized_agriculture 
			}
			ig:ig_trade_unions = {
				add_modifier = {
					name = refused_irrigation_project
					months = 12
				}
			}
		}
	}
}

# Amu Darya River Conflict
persian_flavor.18 = {
	type = country_event
	placement = scope:conflict_state
	title = persian_flavor.18.t
	desc = persian_flavor.18.d
	flavor = persian_flavor.18.f

	duration = 3

	event_image = {
		video = "asia_dead_cattle_poor_harvest"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_agriculture.dds"
	
	trigger = {
		has_technology_researched = mechanical_tools
		NOT = { has_variable = amu_darya_conflict }
		any_scope_state = {
			is_incorporated = yes
			any_scope_building = {
				count >= 3
				OR = {
					is_building_group = bg_agriculture
					is_building_group = bg_plantations
				}
				level >= 10
			}
			OR = {
				has_state_trait = state_trait_oxus_river
				any_neighbouring_state = {
					has_state_trait = state_trait_oxus_river
				}
			}
		}
		OR = {
			any_scope_state = {
				has_state_trait = state_trait_oxus_river
				NOT = { is_homeland_of_country_cultures = root }
			}
			any_country = {
				NOR = {
					root = this
					is_country_type = decentralized
				}
				any_scope_state = {
					has_state_trait = state_trait_oxus_river
					is_incorporated = yes
				}
			}
		}
	}
	
	immediate = {
		set_variable = amu_darya_conflict
		random_scope_state = {
			limit = {
				is_incorporated = yes
				any_scope_building = {
					count >= 3
					OR = {
						is_building_group = bg_agriculture
						is_building_group = bg_plantations
					}
					level >= 10
				}
				OR = {
					has_state_trait = state_trait_oxus_river
					any_neighbouring_state = {
						has_state_trait = state_trait_oxus_river
					}
				}
			}
			save_scope_as = conflict_state
		}
	}
	
	option = {
		name = persian_flavor.18.a #Demand more water
		default_option = yes
		every_scope_state = {
			limit = {
				is_incorporated = yes
				any_scope_building = {
					count >= 3
					OR = {
						is_building_group = bg_agriculture
						is_building_group = bg_plantations
					}
					level >= 10
				}
				OR = {
					has_state_trait = state_trait_oxus_river
					any_neighbouring_state = {
						has_state_trait = state_trait_oxus_river
					}
				}
			}
			add_modifier = {
				name = amu_darya_irrigation
				months = -1
			}
		}
		if = {
			limit = {
				any_scope_state = {
					has_state_trait = state_trait_oxus_river
					NOT = { is_homeland_of_country_cultures = root }
					NOT = { scope:conflict_state = this }
				}
			}
			every_scope_state = {
				limit = {
					NOT = { is_homeland_of_country_cultures = root }
					NOT = { scope:conflict_state = this }
					has_state_trait = state_trait_oxus_river
				}
				add_modifier = {
					name = river_water_diverted
					months = -1
				}
				add_radicals_in_state = {
					value = large_radicals
				}
			}
		}
		if = {
			limit = {
				any_country = {
					NOR = {
						root = this
						is_country_type = decentralized
					}
					any_scope_state = {
						has_state_trait = state_trait_oxus_river
						is_incorporated = yes
					}
				}
			}
			every_country = {
				limit = {
					NOR = {
						root = this
						is_country_type = decentralized
					}
					any_scope_state = {
						has_state_trait = state_trait_oxus_river
						is_incorporated = yes
					}
				}
				change_relations = {
					country = root
					value = -30
				}
				hidden_effect = {
					trigger_event = { id = persian_flavor.20 }
				}
			}
		}
	}
	option = {
		name = persian_flavor.18.b #Water rights must remain equal
		ig:ig_rural_folk = {
			add_modifier = {
				name = refused_irrigation_project
				months = 12
			}
		}
		if = {
			limit = {
				OR = {
					has_law = law_type:law_serfdom 
					has_law = law_type:law_tenant_farmers
				}
			}
			ig:ig_landowners = {
				add_modifier = {
					name = refused_irrigation_project
					months = 12
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_commercialized_agriculture 
			}
			ig:ig_industrialists = {
				add_modifier = {
					name = refused_irrigation_project
					months = 12
				}
			}
		}
		if = {
			limit = {
				has_law = law_type:law_collectivized_agriculture 
			}
			ig:ig_trade_unions = {
				add_modifier = {
					name = refused_irrigation_project
					months = 12
				}
			}
		}
	}
}

# Zayanderud Water Supply
persian_flavor.19 = {
	type = country_event
	placement = scope:isfahan_scope
	title = persian_flavor.19.t
	desc = persian_flavor.19.d
	flavor = persian_flavor.19.f

	duration = 3

	event_image = {
		video = "unspecific_gears_pistons"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_industry.dds"
	
	trigger = {
		c:PER ?= this
		ig:ig_industrialists = {
			is_in_government = yes
			is_marginal = no
		}
		any_scope_state = {
			state_region = s:STATE_ISFAHAN
			any_scope_building = {
				OR = {
					is_building_group = bg_heavy_industry
					is_building_group = bg_power
					is_building_group = bg_oil_extraction
				}
				level >= 10
			}
		}
		NOT = { has_variable = zayanderud_water_event }
	}
	
	immediate = {
		set_variable = zayanderud_water_event
		random_scope_state = {
			limit = {
				state_region = s:STATE_ISFAHAN
			}
			save_scope_as = isfahan_scope
		}
		ig:ig_industrialists = {
			save_scope_as = industrialists_scope
		}
	}
	
	option = {
		name = persian_flavor.19.a
		default_option = yes
		
		scope:isfahan_scope = {
			every_scope_building = {
				limit = {
					OR = {
						is_building_group = bg_heavy_industry
						is_building_group = bg_power
						is_building_group = bg_oil_extraction
					}
					level >= 10
				}
				add_modifier = {
					name = increased_water_supply
					months = -1
				}
			}
			add_modifier = {
				name = reduced_water_resources
				months = -1
			}
			add_radicals_in_state = {
				value = medium_radicals
				strata = poor
			}
			add_radicals_in_state = {
				value = medium_radicals
				strata = middle
			}
		}
		
		scope:industrialists_scope = {
			add_modifier = {
				name = extra_water_resources
				months = 12
			}
		}
	}
	option = {
		name = persian_flavor.19.b
		scope:industrialists_scope = {
			add_modifier = {
				name = refused_water_resources
				months = 12
			}
		}
	}
}

# Response to Water Conflict
persian_flavor.20 = {
	type = country_event
	placement = root
	title = persian_flavor.20.t
	desc = persian_flavor.20.d
	flavor = persian_flavor.20.f

	duration = 3

	event_image = {
		video = "asia_dead_cattle_poor_harvest"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_map.dds"
	
	immediate = {
		if = {
			limit = {
				any_scope_state = {
					has_state_trait = state_trait_helmand_river
				}
			}
			random_country = {
				limit = {
					any_scope_state = {
						has_modifier = helmand_river_irrigation
					}
				}
				save_scope_as = helmand_river_conflict_country
			}
		}
		else_if = {
			limit = {
				any_scope_state = {
					has_state_trait = state_trait_oxus_river
				}
			}
			random_country = {
				limit = {
					any_scope_state = {
						has_modifier = amu_darya_irrigation
					}
				}
				save_scope_as = amu_darya_conflict_country
			}
		}
	}
	
	option = {
		name = persian_flavor.20.a
		default_option = yes
		
		if = {
			limit = {
				any_scope_state = {
					has_state_trait = state_trait_helmand_river
				}
			}
			every_scope_state = {
				limit = {
					has_state_trait = state_trait_helmand_river
				}
				add_modifier = {
					name = river_water_diverted
					months = -1
				}
			}
		}
		else_if = {
			limit = {
				any_scope_state = {
					has_state_trait = state_trait_oxus_river
				}
			}
			every_scope_state = {
				limit = {
					has_state_trait = state_trait_oxus_river
				}
				add_modifier = {
					name = river_water_diverted
					months = -1
				}
			}
		}
	}
}

# End of the Harem Institution?
persian_flavor.21 = {
	type = country_event
	placement = root
	title = persian_flavor.21.t
	desc = persian_flavor.21.d
	flavor = persian_flavor.21.f

	duration = 3

	event_image = {
		video = "middleeast_upperclass_party"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	trigger = {
		any_scope_character = {
			has_variable = is_mohammad_safavid
			is_heir = yes
			age >= 15
			NOT = { has_variable = is_married }
		}
		NOT = { has_variable = harem_scandal }
	}
	
	immediate = {
		set_variable = harem_scandal
		ig:ig_landowners = {
			save_scope_as = landowners_scope
		}
		random_scope_character = {
			limit = {
				has_variable = is_mohammad_safavid
				is_heir = yes
				age >= 15
				NOT = { has_variable = is_married }
			}
			save_scope_as = mohammad_safavid_scope
		}
	}
	
	option = {
		name = persian_flavor.21.a #Let the Crown Prince do as he pleases
		default_option = yes
		
		scope:landowners_scope = {
			add_modifier = {
				name = tolerated_the_prince
				months = normal_modifier_time
			}
		}
		add_modifier = {
			name = harem_institution_questioned
			months = long_modifier_time
		}
		scope:mohammad_safavid_scope = {
			add_modifier = {
				name = the_prince_radical_thoughts
				months = -1
			}
		}
	}
	option = {
		name = persian_flavor.21.b #What is he thinking? Get back to studying!
		scope:mohammad_safavid_scope = {
			add_modifier = {
				name = the_prince_radical_thoughts
				months = -1
			}
		}
	}
}

# Vatan Factory Strike
persian_flavor.22 = {
	type = country_event
	placement = scope:isfahan_scope
	title = persian_flavor.22.t
	desc = persian_flavor.22.d
	flavor = persian_flavor.22.f

	duration = 3

	event_image = {
		video = "unspecific_factory_closed"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_industry.dds"
	
	trigger = {
		c:PER ?= this
		has_technology_researched = labor_movement
		NOT = { has_variable = vatan_factory_strike }
		any_scope_state = {
			state_region = s:STATE_ISFAHAN
			any_scope_building = {
				is_building_type = building_textile_mill
				OR = {
					has_active_production_method = pm_sewing_machines
					has_active_production_method = pm_electric_sewing_machines
				}
				level >= 25
			}
		}
	}
	
	immediate = {
		random_scope_state = {
			limit = {
				state_region = s:STATE_ISFAHAN
			}
			save_scope_as = isfahan_scope
		}
		ig:ig_trade_unions = {
			save_scope_as = trade_unions_scope
		}
		ig:ig_petty_bourgeoisie = {
			save_scope_as = bazaari_scope
		}
		ig:ig_industrialists = {
			save_scope_as = industrialists_scope
		}
		set_variable = vatan_factory_strike
	}
	
	option = {
		name = persian_flavor.22.a #Increase the education of the workers
		default_option = yes
		scope:trade_unions_scope = {
			add_modifier = {
				name = petition_accepted
				months = normal_modifier_time
			}
		}
		scope:bazaari_scope = {
			add_modifier = {
				name = petition_accepted
				months = normal_modifier_time
			}
		}
		scope:isfahan_scope = {
			add_modifier = {
				name = vatan_workers_education
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = persian_flavor.22.b #Prioritize purchase from smaller workers
		scope:trade_unions_scope = {
			add_modifier = {
				name = petition_accepted
				months = normal_modifier_time
			}
		}
		scope:bazaari_scope = {
			add_modifier = {
				name = petition_accepted
				months = normal_modifier_time
			}
		}
		scope:industrialists_scope = {
			add_modifier = {
				name = prioritized_smaller_merchants_negative
				months = normal_modifier_time
			}
		}
		scope:isfahan_scope = {
			add_modifier = {
				name = vatan_small_merchants
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = persian_flavor.22.c #Subsidize the smaller workers with machines
		trigger = {
			capital.market = {
				mg:tools = { market_goods_pricier > 0.05 }
			}
		}
		scope:trade_unions_scope = {
			add_modifier = {
				name = petition_accepted
				months = normal_modifier_time
			}
		}
		scope:bazaari_scope = {
			add_modifier = {
				name = petition_accepted
				months = normal_modifier_time
			}
		}
		add_journal_entry = {
			type = je_set_up_tools_import
		}
	}
	option = {
		name = persian_flavor.22.d #Ignore them
		scope:trade_unions_scope = {
			add_modifier = {
				name = weavers_plight_ignored
				months = normal_modifier_time
			}
		}
		scope:bazaari_scope = {
			add_modifier = {
				name = weavers_plight_ignored
				months = normal_modifier_time
			}
		}
		scope:isfahan_scope = {
			add_modifier = {
				name = vatan_workers_strike
				months = normal_modifier_time
			}
		}
	}
}

# The Liberation of Royal Slaves
persian_flavor.23 = {
	type = country_event
	placement = root
	title = persian_flavor.23.t
	desc = persian_flavor.23.d
	flavor = persian_flavor.23.f

	duration = 3

	event_image = {
		video = "middleeast_upperclass_party"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	
	trigger = {
		has_law = law_type:law_monarchy
		religion = {
			has_discrimination_trait = muslim
		}
		has_variable = slavery_recently_abolished
		NOT = { has_variable = royal_slavery_abolished }
	}
	
	immediate = {
		set_variable = royal_slavery_abolished
	}
	
	option = {
		name = persian_flavor.23.a #The Harem women can live public lives
		default_option = yes
		add_modifier = {
			name = freedom_of_harem_women
			months = long_modifier_time
		}
	}
	option = {
		name = persian_flavor.23.b #The Eunuchs are no longer under subjugation
		add_modifier = {
			name = freedom_of_eunuchs
			months = long_modifier_time
		}
	}
}

# 
persian_flavor.24 = {
	type = country_event
	placement = root
	title = persian_flavor.24.t
	desc = persian_flavor.24.d
	flavor = persian_flavor.24.f

	duration = 3

	event_image = {
		video = "unspecific_world_fair"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	
	trigger = {
	}
	
	option = {
		name = persian_flavor.24.a
		default_option = yes
		
	}
	option = {
		name = persian_flavor.24.b
		
	}
}

# European Teachers in Academies
persian_flavor.25 = {
	type = country_event
	placement = root
	title = persian_flavor.25.t
	desc = persian_flavor.25.d
	flavor = persian_flavor.25.f

	duration = 3

	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	
	option = {
		name = persian_flavor.25.a
		default_option = yes
		
	}
	option = {
		name = persian_flavor.25.b
		
	}
}

# Constitutional Reformation JE

# Debate Among the Ulemmas
persian_flavor.26 = {
	type = country_event
	placement = root
	title = persian_flavor.26.t
	desc = persian_flavor.26.d
	flavor = persian_flavor.26.f

	duration = 3

	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	
	option = {
		name = persian_flavor.26.a
		default_option = yes
		
	}
	option = {
		name = persian_flavor.26.b
		
	}
}

# Reactionary Ulemma Agitator/Leader Speaks Against the Constitution
persian_flavor.26 = {
	type = country_event
	placement = root
	title = persian_flavor.27.t
	desc = persian_flavor.27.d
	flavor = persian_flavor.27.f

	duration = 3

	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	
	option = {
		name = persian_flavor.27.a
		default_option = yes
		
	}
	option = {
		name = persian_flavor.27.b
		
	}
}

# Pro-Democracy Ulemmas Issues Fatwas Against Protests
persian_flavor.28 = {
	type = country_event
	placement = root
	title = persian_flavor.28.t
	desc = persian_flavor.28.d
	flavor = persian_flavor.28.f

	duration = 3

	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	
	option = {
		name = persian_flavor.28.a
		default_option = yes
		
	}
	option = {
		name = persian_flavor.28.b
		
	}
}

# Anti-Democracy Ulemmas Issues Fatwas Against Reforms
persian_flavor.29 = {
	type = country_event
	placement = root
	title = persian_flavor.29.t
	desc = persian_flavor.29.d
	flavor = persian_flavor.29.f

	duration = 3

	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	
	option = {
		name = persian_flavor.29.a
		default_option = yes
		
	}
	option = {
		name = persian_flavor.29.b
		
	}
}

# Rebellious Ulemma Executed
persian_flavor.30 = {
	type = country_event
	placement = root
	title = persian_flavor.30.t
	desc = persian_flavor.30.d
	flavor = persian_flavor.30.f

	duration = 3

	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	
	option = {
		name = persian_flavor.30.a
		default_option = yes
		
	}
	option = {
		name = persian_flavor.30.b
		
	}
}

# New 'Foreign' Constitution Questioned
persian_flavor.31 = {
	type = country_event
	placement = root
	title = persian_flavor.31.t
	desc = persian_flavor.31.d
	flavor = persian_flavor.31.f

	duration = 3

	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	
	option = {
		name = persian_flavor.31.a
		default_option = yes
		
	}
	option = {
		name = persian_flavor.31.b
		
	}
}

# Kashf-e Hijab
persian_flavor.32 = {
	type = country_event
	placement = root
	title = persian_flavor.32.t
	desc = persian_flavor.32.d
	flavor = persian_flavor.32.f

	duration = 3

	event_image = {
		video = "europenorthamerica_sufferage"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	
	immediate = {
		if = {
			limit = {
				NOT = { country_has_state_religion = rel:atheist }
			}
			religion = {
				save_scope_as = state_religion
			}
		}
	}
	
	option = {
		name = persian_flavor.32.a #Women has the right to wear whatever they want
		default_option = yes
		ig:ig_devout = {
			add_modifier = {
				name = unveiled_women_devout
				months = -1
			}
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = unveiled_women_intelligentsia
				months = normal_modifier_time
			}
		}
		if = {
			limit = {
				NOT = { country_has_state_religion = rel:atheist }
			}
			add_radicals = {
				religion = scope:state_religion
				value = medium_radicals
			}
		}
		add_radicals = {
			pop_type = clergymen
			value = medium_radicals
		}
	}
	option = {
		name = persian_flavor.32.b #Place a full ban on veiling
		ig:ig_devout = {
			add_modifier = {
				name = banned_veils
				months = -1
			}
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = unveiled_women_intelligentsia
				months = normal_modifier_time
			}
		}
		if = {
			limit = {
				NOT = { country_has_state_religion = rel:atheist }
			}
			add_radicals = {
				religion = scope:state_religion
				value = large_radicals
			}
		}
		add_radicals = {
			pop_type = clergymen
			value = large_radicals
		}
	}
}

# Persian Renaissance
persian_renaissance.1 = { #Founding of the Academy of Iran
	type = country_event
	title = persian_renaissance.1.t
	desc = persian_renaissance.1.d
	flavor =  persian_renaissance.1.f
	duration = 3
	event_image = {
		video = "middleeast_engineer_blueprint"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_academia.dds"
	
	trigger = {
		#triggered by JE
	}
	option = { #
		name = persian_renaissance.1.a
		default_option = yes
		ig:ig_intelligentsia = {
			add_modifier = {
				name = academy_of_iran_modifier
				months = normal_modifier_time
			}
		}
	}
}

persian_renaissance.2 = { #National Museum of Iran
	type = country_event
	title = persian_renaissance.2.t
	desc = persian_renaissance.2.d
	flavor =  persian_renaissance.2.f
	duration = 3
	event_image = {
		texture = "gfx/event_pictures/iran_museum.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	trigger = {
		#triggered by JE
	}
	option = { #
		name = persian_renaissance.2.a
		default_option = yes
		add_modifier = {
			name = national_museum_modifier
			months = normal_modifier_time
		}
	}
}

persian_renaissance.3 = { #Ctesiphon
	type = country_event
	title = persian_renaissance.3.t
	desc = persian_renaissance.3.d
	flavor =  persian_renaissance.3.f
	duration = 3
	event_image = {
		texture = "gfx/event_pictures/ctesiphon.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	trigger = {
		#triggered by JE
	}
	
	immediate = {
		set_global_variable = ctesiphon_finished
	}
	
	option = {
		name = persian_renaissance.3.a
		default_option = yes
	}
}

persian_renaissance.4 = { #Susa
	type = country_event
	title = persian_renaissance.4.t
	desc = persian_renaissance.4.d
	flavor =  persian_renaissance.4.f
	duration = 3
	event_image = {
		texture = "gfx/event_pictures/susa.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	trigger = {
		#triggered by JE
	}
	
	immediate = {
		set_global_variable = susa_finished
	}
	
	option = {
		name = persian_renaissance.4.a
		default_option = yes
	}
}

persian_renaissance.5 = { #Persepolis
	type = country_event
	title = persian_renaissance.5.t
	desc = persian_renaissance.5.d
	flavor =  persian_renaissance.5.f
	duration = 3
	event_image = {
		texture = "gfx/event_pictures/persepolis.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	trigger = {
		#triggered by JE
	}
	
	immediate = {
		set_global_variable = persepolis_finished
	}
	
	option = {
		name = persian_renaissance.5.a
		default_option = yes
	}
}

persian_renaissance.6 = { #Fire Temple of Yazd
	type = country_event
	title = persian_renaissance.6.t
	desc = persian_renaissance.6.d
	flavor =  persian_renaissance.6.f
	duration = 3
	event_image = {
		texture = "gfx/event_pictures/atesh_beram.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	trigger = {
		#triggered by JE
	}
	
	immediate = {
		set_global_variable = fire_temple_finished
	}
	
	option = {
		name = persian_renaissance.6.a
		default_option = yes
	}
}

persian_renaissance.7 = { #Persian Nationalism
	type = country_event
	title = persian_renaissance.7.t
	desc = persian_renaissance.7.d
	flavor =  persian_renaissance.7.f
	duration = 3
	event_image = {
		video = "asia_hinduism_sikhism"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	trigger = {
	}
	
	immediate = {
		set_variable = iranian_identity
	}
	
	option = { #Adopt a secular identity
		name = persian_renaissance.7.a
		default_option = yes
		ig:ig_devout = {
			add_modifier = {
				name = adopted_blasphemous_ideals
				months = long_modifier_time
				is_decaying = yes
			}
		}
		add_modifier = {
			name = modifier_secularization_support
			months = long_modifier_time
		}
		
		ai_chance = {
			base = 75
		}
	}
	
	option = { #A country must be based on divine guidance
		name = persian_renaissance.7.b
		add_loyalists = {
			religion = rel:shiite
			value = large_radicals
		}
		add_modifier = {
			name = modifier_no_secularization_support
			months = long_modifier_time
		}
		
		ai_chance = {
			base = 25
		}
	}
}

persian_renaissance.8 = { #The Remodeling of Isfahan
	type = country_event
	placement = scope:isfahan_state
	title = persian_renaissance.8.t
	desc = persian_renaissance.8.d
	flavor =  persian_renaissance.8.f
	duration = 3
	event_image = {
		video = "unspecific_world_fair"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	immediate = {
		random_scope_state = {
			limit = {
				state_region = s:STATE_ISFAHAN
			}
			save_scope_as = isfahan_state
		}
	}
	
	option = { #
		name = persian_renaissance.8.a
		default_option = yes
		scope:isfahan_state = {
			add_modifier = {
				name = modifier_isfahan_renewal
				months = 12
			}
		}
		ig:ig_landowners = {
			add_modifier = {
				name = modifier_isfahan_positive
				months = 12
			}
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = modifier_isfahan_positive
				months = 12
			}
		}
		ig:ig_rural_folk = {
			add_modifier = {
				name = modifier_isfahan_negative
				months = 12
			}
		}
		ig:ig_petty_bourgeoisie = {
			add_modifier = {
				name = modifier_isfahan_negative
				months = 12
			}
		}
	}
}

persian_renaissance.9 = { #A New Schooling System/Dar ul-Funun
	type = country_event
	placement = root
	title = persian_renaissance.9.t
	desc = persian_renaissance.9.d
	flavor =  persian_renaissance.9.f
	duration = 3
	event_image = {
		video = "middleeast_engineer_blueprint"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	immediate = {
		
	}
	
	option = { #
		name = persian_renaissance.9.a
		default_option = yes
		
	}
	
	option = { #
		name = persian_renaissance.9.b
		
	}
}

persian_renaissance.10 = { #The Silk Markets of Persia
	type = country_event
	placement = root
	title = persian_renaissance.10.t
	desc = persian_renaissance.10.d
	flavor =  persian_renaissance.10.f
	duration = 3
	event_image = {
		video = "asia_hinduism_sikhism"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	immediate = {
		
	}
	
	option = { #
		name = persian_renaissance.10.a
		default_option = yes
		
	}
	
	option = { #
		name = persian_renaissance.10.b
		
	}
}

#Karakum Frontier events
#The ancient city of Merv, previously fading into obscurity ever since its sacking by the Mongols, has experienced some revitalization as a developing industrial center in [ROOT.GetCountry.GetName]. However, it is lacking in manpower if we wish to turn it into an industrial city, and local governors suggest incorporating the Turkmen nomads into farms and factories.