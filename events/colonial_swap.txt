namespace = colonial_swap

# Terms of Negotiation
colonial_swap.1 = {
	type = country_event
	placement = scope:swappable_state_1
	
	title = colonial_swap.1.t
	desc = colonial_swap.1.d
	flavor = colonial_swap.1.f
	
	event_image = {
		video = "southamerica_aristocrats"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_default.dds"
	
	duration = 3
	
	trigger = {
		# triggered by Colonial Swap
	}

	immediate = {
	}

	option = { # Make a deal to swap for control of State 1
		name = colonial_swap.1.a
		default_option = yes

		scope:other_swap_partner = {
			set_variable = OG_wants_state_1
			trigger_event = { id = colonial_swap.2 }
		}

		ai_chance = {
			base = 50
		}
	}
	option = { # Make a deal to swap for control of State 2
		name = colonial_swap.1.b

		scope:other_swap_partner = {
			set_variable = OG_wants_state_2
			trigger_event = { id = colonial_swap.2 }
		}

		ai_chance = {
			base = 50
		}
	}

	option = { # Nevermind
		name = colonial_swap.1.c

		hidden_effect = {
			remove_variable = negotiating_colony_swap
		}

		ai_chance = { # Don't want the AI to keep clicking the button and then changing its mind in a perpetual and non-performant cycle of indecision
			base = 0
		}
	}
}

# An Offer About [Region 1] and [Region 2]
colonial_swap.2 = {
	type = country_event
	placement = scope:other_swappable_state_1
	
	title = colonial_swap.2.t
	desc = {
		first_valid = {
			triggered_desc = {
				desc = colonial_swap.2.d1
				trigger = {
					has_variable = OG_wants_state_1
				}
			}
			triggered_desc = {
				desc = colonial_swap.2.d2
				trigger = {
					has_variable = OG_wants_state_2
				}
			}
		}
	}
	flavor = colonial_swap.2.f
	
	event_image = {
		video = "unspecific_signed_contract"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_default.dds"
	
	duration = 3
	
	trigger = {
		# triggered by Colonial Swap
	}

	immediate = {
	}

	option = { 
		name = colonial_swap.2.a
		default_option = yes

		if = {
			limit = {
				has_variable = OG_wants_state_1
			}

			scope:other_swappable_state_1 ?= {
				set_state_owner = scope:instigating_swap_partner
			}

			scope:swappable_state_2 ?= {
				set_state_owner = scope:other_swap_partner
			}

			hidden_effect = {
				remove_variable = OG_wants_state_1
			}
		}

		else_if = {
			limit = {
				has_variable = OG_wants_state_2
			}

			scope:other_swappable_state_2 ?= {
				set_state_owner = scope:instigating_swap_partner
			}

			scope:swappable_state_1 ?= {
				set_state_owner = scope:other_swap_partner
			}

			hidden_effect = {
				remove_variable = OG_wants_state_2
			}
		}

		scope:instigating_swap_partner = {
			post_notification = swap_negotiations_success

			hidden_effect = {
				remove_variable = negotiating_colony_swap
			}
		}

		ai_chance = {
			base = 0	


			modifier = {
				trigger = {
					"relations(scope:instigating_swap_partner)" >= relations_threshold:amicable
				}
				add = 10
			}
			modifier = {
				trigger = {
					"relations(scope:instigating_swap_partner)" >= relations_threshold:friendly
				}
				add = 100
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = rivalry
						who = scope:instigating_swap_partner
					}
				}
				add = -100
			}
		}
	}

	option = { 
		name = colonial_swap.2.b

		change_relations = {
			country = scope:instigating_swap_partner
			value = -25
		}

		scope:instigating_swap_partner = {
			post_notification = swap_negotiations_fail

			hidden_effect = {
				remove_variable = negotiating_colony_swap
			}
		}


		### VARIABLE CLEANUP ###
		if = {
			limit = {
				has_variable = OG_wants_state_1
			}
			hidden_effect = {
				remove_variable = OG_wants_state_1
			}
		}
		if = {
			limit = {
				has_variable = OG_wants_state_2
			}
			hidden_effect = {
				remove_variable = OG_wants_state_2
			}
		}

		ai_chance = {
			base = 0

			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = rivalry
						who = scope:instigating_swap_partner
					}
				}
				add = 100
			}
		}
	}

	option = { 
		name = colonial_swap.2.c # As the esteemed philosopher Busta Rhymes once said, Gimme Some More

		scope:instigating_swap_partner = {
			trigger_event = { id = colonial_swap.3 }
		}

		ai_chance = {
			base = 0

			modifier = {
				trigger = {
					"relations(scope:instigating_swap_partner)" >= relations_threshold:amicable
				}
				add = 10
			}
			modifier = {
				trigger = {
					"relations(scope:instigating_swap_partner)" < relations_threshold:friendly
				}
				add = 100
			}
			modifier = {
				trigger = {
					"relations(scope:instigating_swap_partner)" >= relations_threshold:friendly
				}
				add = -50
			}

			modifier = {
				trigger = {
					ruler = {
						has_trait = basic_diplomat
					}
				}
				add = 10
			}
			modifier = {
				trigger = {
					ruler = {
						has_trait = experienced_diplomat
					}
				}
				add = 25
			}
			modifier = {
				trigger = {
					ruler = {
						has_trait = masterful_diplomat
					}
				}
				add = 50
			}

			modifier = {
				trigger = {
					taking_loans = yes # Help, we need money
				}
				add = 500
			}
		}
	}
}

# [country] Demands Payments
colonial_swap.3 = {
	type = country_event
	placement = ROOT
	
	title = colonial_swap.3.t
	desc = colonial_swap.3.d
	flavor = colonial_swap.3.f
	
	event_image = {
		video = "unspecific_signed_contract"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_trade.dds"
	
	duration = 3
	
	trigger = {
		# triggered by Colonial Swap
	}

	immediate = {
	}

	option = { 
		name = colonial_swap.3.a
		default_option = yes

		add_modifier = {
			name = landswap_seller_big_money
			months = 12
		}

		scope:other_swap_partner = {
			add_modifier = {
				name = landswap_buyer_big_money
				months = 12
				is_decaying = no
			}
		}

		if = {
			limit = {
				scope:other_swap_partner = {
					has_variable = OG_wants_state_1
				}
			}

			scope:other_swappable_state_1 = {
				set_state_owner = scope:instigating_swap_partner
			}

			scope:swappable_state_2 = {
				set_state_owner = scope:other_swap_partner
			}

			hidden_effect = {
				remove_variable = OG_wants_state_1
			}
		}

		else_if = {
			limit = {
				scope:other_swap_partner = {
					has_variable = OG_wants_state_2
				}
			}

			scope:other_swappable_state_2 ?= {
				set_state_owner = scope:instigating_swap_partner
			}

			scope:swappable_state_1 ?= {
				set_state_owner = scope:other_swap_partner
			}

			hidden_effect = {
				remove_variable = OG_wants_state_2
			}
		}

		scope:other_swap_partner = {
			post_notification = swap_negotiations_success
		}

		hidden_effect = {
			remove_variable = negotiating_colony_swap
		}

		ai_chance = {
			base = 0

			modifier = {
				trigger = {
					taking_loans = no
				}
				add = 500
			}
		}
	}

	option = { 
		name = colonial_swap.3.b # No dice!

		change_relations = {
			country = scope:other_swap_partner
			value = -25
		}

		scope:other_swap_partner = {
			post_notification = swap_negotiations_fail
		}

		### VARIABLE CLEANUP ###
		if = {
			limit = {
				has_variable = OG_wants_state_1
			}
			hidden_effect = {
				remove_variable = OG_wants_state_1
			}
		}
		if = {
			limit = {
				has_variable = OG_wants_state_2
			}
			hidden_effect = {
				remove_variable = OG_wants_state_2
			}
		}

		hidden_effect = {
			remove_variable = negotiating_colony_swap
		}

		ai_chance = {
			base = 0

			modifier = {
				trigger = {
					taking_loans = yes # ROOT should not be as willing to pay up if ROOT is taking loans
				}
				add = 100
			}
		}
	}
}
