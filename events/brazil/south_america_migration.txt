namespace = sa_migration
# South America Migration events

# SA migration button event
sa_migration.1 = {
	type = country_event
	placement = scope:migration_target_state
	
	title = sa_migration.1.t
	desc = sa_migration.1.d
	flavor = sa_migration.1.f
	
	event_image = {
		video = "southamerica_factory_opening"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_map.dds"
	
	duration = 3
	
	trigger = {
		# triggered by southamerica_migration_button
	}

	immediate = {
		# Note that this closely reflects triggers in the button. Do not change one without changing both
		random_country = {
			limit = {
				#country_rank <= rank_value:major_power
				custom_tooltip = {
					text = is_in_europe_tt
					country_is_in_europe = yes
				}
				custom_tooltip = {
					text = same_state_religion
					religion = root.religion
				}
				average_sol <= root.average_sol
				any_primary_culture = {
					culture_can_have_mass_migration_to = ROOT
				}
				any_scope_state = {
					is_incorporated = yes
					custom_tooltip = {
						text = is_in_europe_tt
						state_is_in_europe = yes
					}
					count >= 3
				}
			}
			save_scope_as = migration_country
			random_scope_state = {
				limit = {
					is_incorporated = yes
					state_is_in_europe = yes
					any_scope_culture = {
						has_homeland = PREV
						culture_can_have_mass_migration_to = ROOT
					}
				}
				save_scope_as = migration_state
				random_scope_culture = {
					limit = {
						has_homeland = PREV
						culture_can_have_mass_migration_to = ROOT
					}
					save_scope_as = migration_culture
				}
			}

		}
		ordered_scope_state = {
			limit = {
				trigger_if = {
					limit = { 
						ROOT = { 
							has_journal_entry = je_central_america_migration
						}
					}
					state_is_in_central_america = yes
				}
				trigger_else_if = {
					limit = {
						ROOT = {
							has_journal_entry = je_south_america_migration
						}
					}
					state_is_in_south_america = yes
				}
				trigger_else_if = {
					limit = {
						ROOT = {
							has_journal_entry = je_american_west_migration
						}
						state_is_in_north_america = yes
					}
				}
				is_incorporated = yes
				is_mass_migration_target = no
			}
			order_by = average_sol
			save_scope_as = migration_target_state
		}
	}

	option = {
		name = sa_migration.1.a
		add_modifier = {
			name = sa_migration_cost
			months = normal_modifier_time
		}
		scope:migration_target_state = {
			create_mass_migration = {
				origin = scope:migration_country
				culture = scope:migration_culture
			}
		}
	}
}

# Startup event
sa_migration.2 = {
	type = country_event
	placement = ROOT
	
	title = sa_migration.2.t
	desc = sa_migration.2.d
	flavor = sa_migration.2.f
	
	event_image = {
		video = "asia_poor_people_moving"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_map.dds"
	
	duration = 3
	
	trigger = {
		# triggered by je_south_america_migration
	}

	option = {
		name = sa_migration.2.a
		default_option = yes
		custom_tooltip = {
			text = sa_migration_button_exists_tt
			set_variable = enable_sa_migration_button
		}
		if = {
			limit = {
				has_journal_entry = je_south_america_migration
			}
			custom_tooltip = {
				text = sa_migration2_tt
				every_scope_state = {
					limit = {
						is_incorporated = yes
						state_is_in_south_america = yes
					}
					add_modifier = {
						name = sa_migration_attraction
						months = long_modifier_time
					}
				}
			}
		}
		
		if = {
			limit = {
				has_journal_entry = je_central_america_migration
			}
			custom_tooltip = {
				text = ca_migration2_tt
				every_scope_state = {
					limit = {
						is_incorporated = yes
						state_is_in_central_america = yes
					}
					add_modifier = {
						name = sa_migration_attraction
						months = long_modifier_time
					}
				}
			}
		}

		if = {
			limit = {
				has_journal_entry = je_american_west_migration
			}
			custom_tooltip = {
				text = wa_migration2_tt
				every_scope_state = {
					limit = {
						is_incorporated = yes
						state_is_in_north_america = yes
					}
					add_modifier = {
						name = sa_migration_attraction
						months = long_modifier_time
					}
				}
			}
		}
		ai_chance = {
			base = 1
		}
	}
	option = {
		name = sa_migration.2.b
		custom_tooltip = sa_migration_cancel_tt
		set_variable = cancel_sa_migration_var
		ai_chance = {
			base = 0
		}
	}
}

# Completion event
sa_migration.3 = {
	type = country_event
	placement = ROOT
	
	title = sa_migration.3.t
	desc = sa_migration.3.d
	flavor = sa_migration.3.f
	
	event_image = {
		video = "africa_construction_colony"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_map.dds"
	
	duration = 3
	
	trigger = {
		# triggered by je_south_america_migration
	}

	option = {
		name = sa_migration.3.a
		add_modifier = {
			name = populated_southamerica
		}
	}
}

# Promoting Colonial Migration
sa_migration.5 = {
	type = country_event
	placement = root
	
	title = sa_migration.5.t
	desc = sa_migration.5.d
	flavor = sa_migration.5.f
	
	event_image = {
		video = "unspecific_steam_ship"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_map.dds"
	
	duration = 3

	immediate = {
		set_variable = {
			name = colonial_migration_var
			months = 120
		}
		root = {
			save_scope_as = migration_country
		}
		random_primary_culture = {
			save_scope_as = migration_culture
		}
		random_subject_or_below = {
			limit = {
				is_direct_subject_of = root
				is_country_type = colonial
				NOT = { has_law = law_type:law_colonial_exploitation }
			}
			save_scope_as = migration_target_1
		}
		random_subject_or_below = {
			limit = {
				is_direct_subject_of = root
				is_country_type = colonial
				NOT = { has_law = law_type:law_colonial_exploitation }
				NOT = { scope:migration_target_1 = this }
			}
			save_scope_as = migration_target_2
		}
		random_subject_or_below = {
			limit = {
				is_direct_subject_of = root
				is_country_type = colonial
				NOT = { has_law = law_type:law_colonial_exploitation }
				NOT = { scope:migration_target_1 = this }
				NOT = { scope:migration_target_2 = this }
			}
			save_scope_as = migration_target_3
		}
	}

	option = {
		name = sa_migration.5.a
		default_option = yes
		add_modifier = {
			name = sa_migration_cost
			months = normal_modifier_time
		}
		scope:migration_target_1 = {
			capital = {
				create_mass_migration = {
					origin = scope:migration_country
					culture = scope:migration_culture
				}
				add_modifier = {
					name = canada_great_migration
					months = long_modifier_time
				}
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:migration_target_1 = {
						total_population < 1000000
					}
				}
				add = 10
			}
		}
	}
	option = {
		name = sa_migration.5.b
		trigger = {
			exists = scope:migration_target_2
		}
		add_modifier = {
			name = sa_migration_cost
			months = normal_modifier_time
		}
		scope:migration_target_2 = {
			capital = {
				create_mass_migration = {
					origin = scope:migration_country
					culture = scope:migration_culture
				}
				add_modifier = {
					name = canada_great_migration
					months = long_modifier_time
				}
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:migration_target_2 = {
						total_population < 1000000
					}
				}
				add = 10
			}
		}
	}
	option = {
		name = sa_migration.5.c
		trigger = {
			exists = scope:migration_target_3
		}
		add_modifier = {
			name = sa_migration_cost
			months = normal_modifier_time
		}
		scope:migration_target_3 = {
			capital = {
				create_mass_migration = {
					origin = scope:migration_country
					culture = scope:migration_culture
				}
				add_modifier = {
					name = canada_great_migration
					months = long_modifier_time
				}
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:migration_target_3 = {
						total_population < 1000000
					}
				}
				add = 10
			}
		}
	}
	option = {
		name = sa_migration.5.e
		remove_variable = colonial_migration_var
		ai_chance = {
			base = 0
		}
	}
}